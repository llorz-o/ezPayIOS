{"version":3,"file":"js/2537.09a363ca.js","mappings":"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","sources":["webpack://ez_pay/./src/views/qr_login/index.vue?9b5d","webpack://ez_pay/src/views/qr_login/index.vue","webpack://ez_pay/./src/views/qr_login/index.vue?0afb","webpack://ez_pay/./src/views/qr_login/index.vue","webpack://ez_pay/./node_modules/js-base64/base64.mjs"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page page-qr_login\"},[_c('img',{attrs:{\"id\":\"qrcode\",\"alt\":\"\",\"src\":\"\"}}),_c('p',[_vm._v(\"检查到新设备登录\")]),_c('p',[_vm._v(\"请用已绑定设备的扫码授权登录\")]),_c('van-button',{staticClass:\"primary block\",attrs:{\"to\":{\n      path: '/layout_auth',\n      query: {\n        unbind: 1,\n      },\n    },\"replace\":\"\"}},[_vm._v(\" 无法扫码？解除验证码 \")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"page page-qr_login\">\n    <img id=\"qrcode\" alt=\"\" src=\"\"/>\n    <p>检查到新设备登录</p>\n    <p>请用已绑定设备的扫码授权登录</p>\n    <van-button\n      :to=\"{\n        path: '/layout_auth',\n        query: {\n          unbind: 1,\n        },\n      }\"\n      class=\"primary block\"\n      replace\n    >\n      无法扫码？解除验证码\n    </van-button>\n  </div>\n</template>\n\n<script>\nimport QRCode from \"qrcode\";\nimport {checkQRCodeLoginUuid, getQRCodeLoginUuid} from \"@/apis/user\";\nimport {setAuthentication} from \"@/vendor/q\";\nimport {Toast} from \"vant\";\nimport {encode} from \"js-base64\";\n\nexport default {\n  data() {\n    return {\n      uuid: \"\",\n      loading: null,\n    };\n  },\n  created() {\n    this.$root.$emit(\"root:set-topbar\", [\"left-back\"]);\n  },\n  mounted() {\n    this.createQrcode();\n  },\n  methods: {\n    createQrcode() {\n      const $qrcode = document.getElementById(\"qrcode\");\n      this.getQrCode($qrcode);\n    },\n    getQrCode($qrcode) {\n      getQRCodeLoginUuid().then(({ok, data, msg}) => {\n        if (ok) {\n          this.uuid = data.uuid;\n          QRCode.toDataURL(`ezpay://${encode(`login?v=${data.uuid}`)}`)\n            .then((url) => {\n              $qrcode.src = url;\n              this.checkScanState();\n            })\n            .catch((err) => {\n              console.error(err);\n              this.$dialog.confirm({\n                message: \"二维码生成失败，请刷新二维码。\",\n                className: \"common\",\n                confirmButtonText: \"刷新二维码\",\n                confirmButtonColor: \"#6f59fe\",\n                beforeClose: (action, done) => {\n                  if (action === \"confirm\") {\n                    this.createQrcode();\n                  } else {\n                    this.$router.back();\n                  }\n                  done();\n                },\n              });\n            });\n        } else {\n          this.$dialog.confirm({\n            message: \"二维码请求失败，请刷新二维码。\",\n            className: \"common\",\n            confirmButtonText: \"刷新二维码\",\n            confirmButtonColor: \"#6f59fe\",\n            beforeClose: (action, done) => {\n              if (action === \"confirm\") {\n                this.createQrcode();\n              } else {\n                this.$router.back();\n              }\n              done();\n            },\n          });\n        }\n      });\n    },\n    checkScanState() {\n      checkQRCodeLoginUuid({uuid: this.uuid}).then(({ok, data, msg}) => {\n        if (ok) {\n          if (data.state === \"scanned\") {\n            if (this.loading === null) {\n              this.loading = Toast.loading({\n                duration: 0, // 持续展示 toast\n                forbidClick: true,\n                message: \"等待确认\",\n              });\n            }\n            this.timer = setTimeout(() => this.checkScanState(), 5 * 1000);\n            return;\n          } else {\n            this.loading && this.loading.clear();\n            this.loading = null;\n          }\n          if (data.state === \"confirm\") {\n            clearTimeout(this.timer);\n            this.$root.setUserInfo(data.userInfo);\n            this.$st.set(\"USER_INFO\", data.userInfo);\n            this.$st.set(\"TOKEN\", data.token);\n            this.$root.token = data.token;\n            setAuthentication(data.token);\n            this.$root.refreshGlobalNotices()\n            this.$root.loadConfig();\n            this.$root.loadBanks();\n            this.$root.loadPayments();\n            this.$router.replace(\"/\");\n            return;\n          }\n          if (data.state === \"canceled\") {\n            clearTimeout(this.timer);\n            // 提示已取消，路由回退\n            this.$dialog.alert({\n              className: \"common\",\n              message: \"新设备登录已取消\",\n              confirmButtonColor: \"#6f59fe\",\n              beforeClose: (_, done) => {\n                done();\n                this.$router.back();\n              },\n            });\n            return;\n          }\n          if (data.state === \"invalid\") {\n            clearTimeout(this.timer);\n            this.$dialog.confirm({\n              message: \"验证已失效，请重新扫码。\",\n              confirmButtonText: \"重新扫码\",\n              confirmButtonColor: \"#6f59fe\",\n              className: \"common\",\n              beforeClose: (action, done) => {\n                if (action === \"confirm\") {\n                  this.createQrcode();\n                } else {\n                  this.$router.back();\n                }\n                done();\n              },\n            });\n            return;\n          }\n          this.timer = setTimeout(() => this.checkScanState(), 5 * 1000);\n        }\n      });\n    },\n  },\n  beforeDestroy() {\n    clearTimeout(this.timer);\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.page.page-qr_login {\n  #qrcode {\n    display: block;\n    width: 160px;\n    height: 160px;\n    margin: 30px auto 20px;\n    background-color: rgba($color: #000000, $alpha: 0.3);\n  }\n\n  p {\n    text-align: center;\n    font-size: 15px;\n  }\n\n  .van-button {\n    margin-top: 220px;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=7443fae8&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.2';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasatob = typeof atob === 'function';\nconst _hasbtoa = typeof btoa === 'function';\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it, fn = (x) => x) => new Uint8Array(Array.prototype.slice.call(it, 0).map(fn));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = _hasbtoa ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 §5\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 §5.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, bin = '', r1, r2;\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        bin += r1 === 64 ? _fromCC(u24 >> 16 & 255)\n            : r2 === 64 ? _fromCC(u24 >> 16 & 255, u24 >> 8 & 255)\n                : _fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255);\n    }\n    return bin;\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = _hasatob ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a), c => c.charCodeAt(0));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins,\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","path","query","unbind","staticRenderFns","data","uuid","loading","created","mounted","methods","createQrcode","getQrCode","getQRCodeLoginUuid","msg","_this","QRCode","then","$qrcode","console","message","className","confirmButtonText","confirmButtonColor","beforeClose","done","checkScanState","checkQRCodeLoginUuid","_this2","duration","forbidClick","clearTimeout","setAuthentication","beforeDestroy","component","version","VERSION","_hasatob","atob","_hasbtoa","btoa","_hasBuffer","Buffer","_TD","TextDecoder","undefined","_TE","TextEncoder","b64ch","b64chs","Array","prototype","slice","call","b64tab","a","tab","forEach","c","i","b64re","_fromCC","String","fromCharCode","bind","_U8Afrom","Uint8Array","from","it","fn","arguments","length","x","map","_mkUriSafe","src","replace","m0","_tidyB64","s","btoaPolyfill","bin","u32","c0","c1","c2","asc","pad","charCodeAt","TypeError","substring","_btoa","toString","_fromUint8Array","u8a","maxargs","strs","l","push","apply","subarray","join","fromUint8Array","urlsafe","cb_utob","cc","re_utob","utob","u","_encode","encode","encodeURI","re_btou","cb_btou","cccc","cp","offset","btou","b","atobPolyfill","test","u24","r1","r2","charAt","_atob","_toUint8Array","toUint8Array","_unURI","_decode","decode","isValid","_noEnum","v","value","enumerable","writable","configurable","extendString","_add","name","body","Object","defineProperty","extendUint8Array","extendBuiltins","gBase64","fromBase64","toBase64","encodeURL"],"sourceRoot":""}