{"version":3,"file":"js/6375.651f0d3b.js","mappings":"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","sources":["webpack://ez_pay/./src/views/login/index.vue?761a","webpack://ez_pay/src/views/login/index.vue","webpack://ez_pay/./src/views/login/index.vue?3aee","webpack://ez_pay/./src/views/login/index.vue","webpack://ez_pay/./src/apis/verify.js","webpack://ez_pay/./src/vendor/globalVerify.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page-login\"},[_c('van-form',{on:{\"submit\":_vm.onSubmit}},[(_vm.smsModeSignIn && !_vm.unbind)?_c('van-field',{attrs:{\"autocomplete\":\"new-password\",\"left-icon\":\"phone\",\"maxlength\":\"11\",\"placeholder\":\"手机号\",\"type\":\"tel\"},model:{value:(_vm.form.phoneNumber),callback:function ($$v) {_vm.$set(_vm.form, \"phoneNumber\", $$v)},expression:\"form.phoneNumber\"}}):_c('van-field',{attrs:{\"autocomplete\":\"new-password\",\"left-icon\":\"manager\",\"maxlength\":\"20\",\"placeholder\":\"用户名\",\"type\":\"text\"},model:{value:(_vm.form.userName),callback:function ($$v) {_vm.$set(_vm.form, \"userName\", $$v)},expression:\"form.userName\"}}),(_vm.passwordModeSignIn || _vm.unbind)?_c('van-field',{attrs:{\"right-icon\":_vm.showPassword ? 'eye-o' : 'closed-eye',\"type\":_vm.showPassword ? 'text' : _vm.$root.dynamicPasswordInputType,\"autocomplete\":\"new-password\",\"left-icon\":\"lock\",\"placeholder\":\"密码\"},on:{\"click-right-icon\":function($event){_vm.showPassword = !_vm.showPassword}},model:{value:(_vm.form.password),callback:function ($$v) {_vm.$set(_vm.form, \"password\", $$v)},expression:\"form.password\"}}):_vm._e(),(_vm.graphicVerify)?_c('van-field',{attrs:{\"autocomplete\":\"new-password\",\"left-icon\":\"youzan-shield\",\"placeholder\":\"验证码\"},scopedSlots:_vm._u([{key:\"extra\",fn:function(){return [_c('van-image',{staticClass:\"verifyCode\",attrs:{\"src\":_vm.verifyImageBase64},on:{\"click\":_vm.refreshImageVerifyCode}})]},proxy:true}],null,false,2715648759),model:{value:(_vm.form.imgCode),callback:function ($$v) {_vm.$set(_vm.form, \"imgCode\", $$v)},expression:\"form.imgCode\"}}):_vm._e(),(_vm.smsModeSignIn && !_vm.unbind)?_c('van-field',{attrs:{\"autocomplete\":\"new-password\",\"left-icon\":\"youzan-shield\",\"placeholder\":\"短信验证码\"},scopedSlots:_vm._u([{key:\"extra\",fn:function(){return [_c('van-button',{staticClass:\"btnGetVerifyCode primary\",attrs:{\"native-type\":\"button\",\"size\":\"small\"},on:{\"click\":_vm.getSmsVerifyCode}},[(_vm.smsCountdown)?_c('van-count-down',{attrs:{\"time\":_vm.smsCountdown,\"auto-start\":\"\",\"format\":\"ss\"},on:{\"finish\":function($event){_vm.smsCountdown = 0}}}):[_vm._v(\" 获取验证码\")]],2)]},proxy:true}],null,false,2740329012),model:{value:(_vm.form.smsCode),callback:function ($$v) {_vm.$set(_vm.form, \"smsCode\", $$v)},expression:\"form.smsCode\"}}):_vm._e(),(_vm.slideVerify)?_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\"}},[_c('div',{ref:\"dx\"})]):_vm._e(),(!_vm.unbind)?[_c('div',{staticClass:\"ver\"},[_c('span',{staticStyle:{\"text-align\":\"left\"}},[_vm._v(\" 版本号：V \"+_vm._s(_vm.$root.version)+\" \")]),_c('span',{staticStyle:{\"text-align\":\"right\"},on:{\"click\":_vm.onForgotPsw}},[_vm._v(\" 忘记密码？ \")])]),_c('van-button',{staticClass:\"primary block\"},[_vm._v(\" 登录\")]),_c('van-divider',{staticStyle:{\"color\":\"#6f5bfeff\"}},[_vm._v(\"or\")]),_c('van-button',{staticClass:\"block\",attrs:{\"color\":\"#6f5bfeff\",\"native-type\":\"button\",\"plain\":\"\"},on:{\"click\":function($event){_vm.mode = _vm.mode === 1 ? 2 : 1}}},[_vm._v(\" \"+_vm._s(_vm.modeSwitchButtonContext)+\" \")])]:[_c('van-button',{staticClass:\"primary block unbind\"},[_vm._v(\" 确认登陆\")])]],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"page-login\">\n    <van-form @submit=\"onSubmit\">\n      <!--      短信登录-->\n      <van-field v-if=\"smsModeSignIn && !unbind\" v-model=\"form.phoneNumber\"\n                 autocomplete=\"new-password\"\n                 left-icon=\"phone\" maxlength=\"11\" placeholder=\"手机号\"\n                 type=\"tel\">\n      </van-field>\n      <!--      用户名登录-->\n      <van-field v-else v-model=\"form.userName\" autocomplete=\"new-password\" left-icon=\"manager\"\n                 maxlength=\"20\" placeholder=\"用户名\"\n                 type=\"text\">\n      </van-field>\n      <van-field v-if=\"passwordModeSignIn || unbind\" v-model=\"form.password\"\n                 :right-icon=\"showPassword ? 'eye-o' : 'closed-eye'\"\n                 :type=\"showPassword ? 'text' : $root.dynamicPasswordInputType\"\n                 autocomplete=\"new-password\" left-icon=\"lock\"\n                 placeholder=\"密码\"\n                 @click-right-icon=\"showPassword = !showPassword\">\n      </van-field>\n\n      <van-field v-if=\"graphicVerify\" v-model=\"form.imgCode\"\n                  autocomplete=\"new-password\" left-icon=\"youzan-shield\"\n                  placeholder=\"验证码\">\n        <template #extra>\n          <van-image :src=\"verifyImageBase64\" class=\"verifyCode\" @click=\"refreshImageVerifyCode\"/>\n        </template>\n      </van-field>\n\n      <van-field v-if=\"smsModeSignIn && !unbind\" v-model=\"form.smsCode\" autocomplete=\"new-password\"\n                 left-icon=\"youzan-shield\"\n                 placeholder=\"短信验证码\">\n        <template #extra>\n          <van-button class=\"btnGetVerifyCode primary\" native-type=\"button\" size=\"small\"\n                      @click=\"getSmsVerifyCode\">\n            <van-count-down v-if=\"smsCountdown\" :time=\"smsCountdown\" auto-start format=\"ss\"\n                            @finish=\"smsCountdown = 0\"/>\n            <template v-else> 获取验证码</template>\n          </van-button>\n        </template>\n      </van-field>\n\n      <div v-if=\"slideVerify\" style=\"display:flex;justify-content:center;\">\n        <div ref=\"dx\"></div>\n      </div>\n\n      <template v-if=\"!unbind\">\n        <div class=\"ver\">\n          <span style=\"text-align:left;\">\n            版本号：V {{ $root.version }}\n          </span>\n          <span style=\"text-align:right;\" @click=\"onForgotPsw\">\n            忘记密码？\n          </span>\n        </div>\n        <van-button class=\"primary block\"> 登录</van-button>\n        <van-divider style=\"color:#6f5bfeff;\">or</van-divider>\n        <van-button class=\"block\" color=\"#6f5bfeff\" native-type=\"button\" plain\n                    @click=\"mode = mode === 1 ? 2 : 1\">\n          {{ modeSwitchButtonContext }}\n        </van-button>\n      </template>\n      <template v-else>\n        <van-button class=\"primary block unbind\"> 确认登陆</van-button>\n      </template>\n    </van-form>\n  </div>\n</template>\n\n<script>\nimport {login, loginDevice, smsSignIn} from \"@/apis/user\";\nimport {getImageCode, sendCode} from \"@/apis/verify\";\nimport {setAuthentication} from \"@/vendor/q\";\nimport {verifySecuretedCode} from \"@/vendor/globalVerify\";\n\nexport default {\n  data() {\n    return {\n      form: {\n        userName: \"\",\n        phoneNumber: \"\",\n        password: \"\",\n        imgCode: \"\",\n        smsCode: \"\",\n        verifyToken: \"\",\n      },\n      verifyImageBase64: \"\",\n      showPassword: false,\n      smsCountdown: 0,\n      verifyUniqid: \"\",\n      originalMode: null,\n    };\n  },\n  computed: {\n    mode: {\n      get() {\n        return this.originalMode || Number(this.$root.registerMode)\n      },\n      set(val) {\n        this.originalMode = val\n      }\n    },\n    unbind() {\n      return this.$route.query.unbind === '1';\n    },\n    passwordModeSignIn() {\n      return this.mode === 1\n    },\n    smsModeSignIn() {\n      return this.mode !== 1\n    },\n    modeSwitchButtonContext() {\n      if (this.mode === 1) return '短信验证码登录'\n      if (this.mode === 2) return '密码登录'\n    },\n    graphicVerify() {\n      return Number(this.$root.verifyCodeType) === 1\n    },\n    slideVerify() {\n      return Number(this.$root.verifyCodeType) === 2\n    }\n  },\n  created() {\n    if (process.env[\"NODE_ENV\"] === 'development') {\n      this.form.userName = process.env['VUE_APP_USER_NAME']\n      this.form.password = process.env['VUE_APP_PASSWORD']\n    }\n    this.refreshImageVerifyCode();\n  },\n  methods: {\n    async loginDevice() {\n      const securePassword = await verifySecuretedCode(this)\n      if (securePassword && securePassword.length === 6) {\n        loginDevice({\n          userName: this.form.userName,\n          password: this.form.password,\n          code: this.form.imgCode,\n          verifyUniqid: this.verifyUniqid,\n          securePassword,\n          // smsCode: this.form.smsCode,\n          verifyToken: this.form.verifyToken\n        }).then(({ok, data, msg}) => {\n          if (ok) {\n            this.$root.setUserInfo(data.userInfo);\n            this.$st.set(\"USER_INFO\", data.userInfo);\n            this.$st.set(\"TOKEN\", data.token);\n            this.$root.token = data.token;\n            setAuthentication(data.token);\n            this.$root.refreshGlobalNotices();\n            this.$root.loadConfig();\n            this.$root.loadBanks();\n            this.$router.replace(\"/\");\n          } else {\n            this.refreshImageVerifyCode();\n            this.dx && this.dx.reload()\n            this.form.verifyToken = \"\";\n            this.form.smsCode = \"\";\n            this.form.imgCode = \"\";\n            this.$toast.fail(msg);\n          }\n        });\n      }\n    },\n    onSubmit() {\n      if (this.passwordModeSignIn && this.form.userName.length === 0) {\n        return this.$toast.fail(\"请输入用户名\");\n      }\n      if (\n        (!/^(?![^a-zA-Z]+$)(?!\\D+$)/.test(this.form.password) ||\n          this.form.password.length < 6 ||\n          this.form.password.length > 15\n        )\n        && (this.passwordModeSignIn || this.unbind) /* 短信登录无需密码 */\n      )\n        return this.$toast.fail(\"请输入6-15位字母数字组成的密码\");\n      if (this.slideVerify && !this.form.verifyToken) {\n        return this.$toast.fail(\"请滑动验证\");\n      }\n      if (this.graphicVerify && !this.form.imgCode) {\n        return this.$toast.fail(\"请输入图形证码\");\n      }\n      if (this.unbind) {\n        // if (this.form.smsCode === \"\")\n        //   return this.$toast.fail(\"请输入短信验证码\");\n        this.loginDevice()\n        return;\n      }\n\n      if (this.smsModeSignIn) {\n        if (!/^1[3456789]\\d{9}$/.test(this.form.phoneNumber))\n          return this.$toast.fail(\"请输入合法的手机号码\");\n        if (this.form.smsCode === \"\")\n          return this.$toast.fail(\"请输入短信验证码\");\n\n        smsSignIn({\n          phoneNumber: this.form.phoneNumber,\n          smsCode: this.form.smsCode,\n          code: this.form.imgCode,\n          verifyUniqid: this.verifyUniqid,\n          verifyToken: this.form.verifyToken\n        }).then(({ok, data, msg, code}) => {\n          if (code === 1001) {\n            return this.$router.push(\"/qr_login\");\n          }\n          if (ok) {\n            this.$root.setUserInfo(data.userInfo);\n            this.$st.set(\"USER_INFO\", data.userInfo);\n            this.$st.set(\"TOKEN\", data.token);\n            this.$root.token = data.token;\n            setAuthentication(data.token);\n            this.$root.refreshGlobalNotices();\n            this.$root.loadConfig();\n            this.$root.loadBanks();\n            this.$root.loadPayments();\n            this.$router.replace(\"/\");\n          } else {\n            this.refreshImageVerifyCode();\n            this.dx && this.dx.reload()\n            this.form.verifyToken = \"\";\n            this.form.smsCode = \"\";\n            this.form.imgCode = \"\";\n            this.$toast.fail(msg);\n          }\n        });\n        return\n      }\n\n      login({\n        userName: this.form.userName,\n        password: this.form.password,\n        code: this.form.imgCode,\n        verifyUniqid: this.verifyUniqid,\n        verifyToken: this.form.verifyToken\n      }).then(({ok, data, msg, code}) => {\n        if (code === 1001) {\n          return this.$router.push(\"/qr_login\");\n        }\n        if (ok) {\n          this.$root.setUserInfo(data.userInfo);\n          this.$st.set(\"USER_INFO\", data.userInfo);\n          this.$st.set(\"TOKEN\", data.token);\n          this.$root.token = data.token;\n          setAuthentication(data.token);\n          this.$root.refreshGlobalNotices();\n          this.$root.loadConfig();\n          this.$root.loadBanks();\n          this.$root.loadPayments();\n          this.$router.replace(\"/\");\n        } else {\n          this.refreshImageVerifyCode();\n          this.dx && this.dx.reload()\n          this.form.verifyToken = \"\";\n          this.form.imgCode = \"\";\n          this.$toast.fail(msg);\n        }\n      });\n    },\n    refreshImageVerifyCode() {\n      getImageCode({\n        codeType: \"login\",\n      }).then(({ok, data, code}) => {\n        if (ok) {\n          this.verifyUniqid = data.verifyUniqid;\n          this.verifyImageBase64 = data.verifyCode;\n        } else {\n          if (code === 400) return this.$toast.fail(\"请输入合法的手机号码\");\n        }\n      });\n    },\n    smsCount() {\n      const lastTimeSmsCodeRequest = this.$st.get(\"LAST_SMS_REQUEST\");\n      if (lastTimeSmsCodeRequest) {\n        const delay = Date.now() - Number(lastTimeSmsCodeRequest);\n        if (delay < 60) {\n          this.smsCountdown = (60 - delay) * 1000;\n        }\n      }\n    },\n    getSmsVerifyCode() {\n      if (this.smsCountdown) {\n        return;\n      }\n      sendCode({\n        phoneNumber: this.form.phoneNumber,\n        codeType: \"login\",\n      }).then(({ok, msg, data}) => {\n        if (ok) {\n          this.$toast.success(msg);\n          this.smsCountdown = 60000;\n          this.$st.set(\"LAST_SMS_REQUEST\", Date.now());\n        } else {\n          this.$toast.fail(msg);\n        }\n      });\n    },\n    onForgotPsw() {\n      this.$dialog.confirm({\n        className: \"retrievePsw\",\n        message: \"找回密码,请联系客服\",\n        confirmButtonColor: \"#6f59fe\",\n        confirmButtonText: \"确认\",\n        cancelButtonText: \"取消\",\n        beforeClose: (action, done) => {\n          if (action === \"confirm\") {\n            // 跳转客服线\n            this.$root.openCustomerService();\n          }\n          done();\n        },\n      });\n    },\n  },\n  mounted() {\n    const _that = this;\n    const dx = this.$refs.dx\n    if (dx) {\n      this.dx = _dx.Captcha(dx, {\n        // appId, 在控制台应用管理或应用配置模块获取\n        appId: process.env.VUE_APP_DX_APPID,\n        apiServer: process.env.VUE_APP_DX_API_SERVER,\n        style: \"inline\",\n        // apiServer域名地址在控制台页面->无感验证->应用管页面左上角获取，必须填写完整包括https://。\n        success: token => {\n          // 获取验证码token，用于后端校验，注意获取token若是sl开头的字符串，则是前端网络不通生成的降级token,请检查前端网络及apiServer地址。\n          _that.form.verifyToken = token;\n        },\n        fail: () => {\n          _that.form.verifyToken = '';\n        }\n      });\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.page-login {\n  padding: 15px;\n\n  .van-form {\n    .van-field {\n      height: 60px;\n      line-height: 39.997px;\n\n      &__left-icon {\n        margin-right: 10px;\n\n        .van-icon {\n          color: $theme;\n          font-size: 25px;\n        }\n      }\n    }\n\n    .verifyCode {\n      height: 39.997px;\n      width: 100px;\n\n      .van-icon {\n        font-size: 25px;\n      }\n    }\n\n    .btnGetVerifyCode {\n      height: 24px;\n      width: 90px;\n      border-radius: 12px;\n      font-size: 12px;\n\n      .van-count-down {\n        color: #fff;\n      }\n    }\n  }\n\n  .ver {\n    padding: 40px 10px 0;\n    text-align: center;\n    font-size: 12px;\n    color: #333333ff;\n\n    span {\n      display: inline-block;\n      width: 50%;\n    }\n  }\n\n  .forgotPassword {\n    padding: 30px 0;\n    text-align: center;\n    font-size: 15px;\n    color: #333333ff;\n  }\n\n  .van-button.unbind {\n    margin: 50px 0;\n  }\n}\n</style>\n\n<style lang=\"scss\">\n.retrievePsw {\n  .van-dialog__message {\n    text-align: center !important;\n    font-size: 14px !important;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=6b51a762&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=scss&\"\nimport style1 from \"./index.vue?vue&type=style&index=1&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import {q} from '@/vendor/q';\n// import * as wangsu from 'wcs-js-sdk'\n// import CryptoJS from 'crypto-js'\n\nexport const getImageCode = data => q({\n  url: '/Api/Common/VerifyCode/getImageCode',\n  method: 'POST',\n  data\n})\n\nexport const checkVerifyCode = data => q({\n  url: '/Api/Common/VerifyCode/checkVerifyCodeNew',\n  method: 'POST',\n  data\n})\n\nexport const sendCode = data => q({\n  url: '/Api/Common/VerifyCode/sendCode',\n  method: 'POST',\n  data\n})\n\nexport const uploadBase64Img = data => q({\n  url: '/Api/User/UploadFile/uploadBase64Img',\n  method: 'POST',\n  data\n})\n\nexport const uploadVideo = data => q({\n  url: '/Api/User/UploadFile/uploadVideo',\n  method: 'POST',\n  data,\n})\n\nexport const uploadLargeVideo = (data, opts = {}) => q({\n  url: '/Api/User/UploadFile/uploadLargeVideo',\n  method: 'POST',\n  data,\n  opts\n})\n\nexport const uploadFileToken = data => q({\n  url: '/Api/User/UploadFile/uploadFileToken',\n  method: 'POST',\n  data,\n})\n\n// export const uploadFromWangSu = async (file, type, mediaType) => {\n//   const {ok, data, msg} = await uploadFileToken({\n//     type,\n//     mediaType\n//   })\n//   if (!ok) throw new Error(`msg:${msg},can not get sdk token`)\n//   const _uploader = wangsu.wcsUpload(file, data.token, data.uploadUrl, {\n//     timeout: 25000,\n//     retryCount: 4,\n//   })\n//   // 获取文件etag\n//   // wangsu.getEtagHash(file,res => {\n//   //   console.log(res);\n//   // })\n//   return await new Promise((resolve, reject) => {\n//     _uploader.onError = error => {\n//       console.error('wangsu upload error', error);\n//       reject({\n//         ok:false,\n//         msg: `code:${error.code},isRequestError:${error.isRequestError} message:${error.message}`\n//       })\n//     }\n//     _uploader.onComplete = res => {\n//       resolve({\n//         ok: true,\n//         msg: \"上传成功\",\n//         data: {\n//           name: data.imageUrl\n//         }\n//       })\n//     }\n//     _uploader.putFile()\n//   })\n// }\n","import {checkGoogleAuthenticator} from \"@/apis/user\";\n\nexport const verifySecuretedCode = vm => {\n  vm.$toast('请输入资金密码')\n  return new Promise((resolve, reject) => {\n    vm.$root.showPassowordKeyboard = true\n    vm.$root.$once('root:global-password', async code => resolve(code))\n  })\n}\n\nexport const verifyGoogleAuth = (vm) => {\n  if (vm.$root.userInfo && vm.$root.userInfo.isGoogleAuthenticator) {\n    vm.$toast('请输入Google安全码')\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        vm.$root.showPassowordKeyboard = true\n        vm.$root.$once('root:global-password', async code => {\n          if (!code || code === 'close-by-route-change') return resolve(false)\n          const {ok, msg} = await checkGoogleAuthenticator({safeCode: code})\n          if (ok) {\n            resolve(true)\n          } else {\n            resolve(false)\n            vm.$toast.fail(msg)\n          }\n        })\n      }, 0)\n    })\n  } else {\n    return Promise.resolve(true)\n  }\n\n}\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","on","onSubmit","smsModeSignIn","unbind","attrs","model","value","form","callback","$$v","$set","expression","passwordModeSignIn","showPassword","$root","dynamicPasswordInputType","$event","_e","scopedSlots","_u","key","fn","verifyImageBase64","refreshImageVerifyCode","proxy","getSmsVerifyCode","smsCountdown","_v","staticStyle","ref","_s","version","onForgotPsw","mode","modeSwitchButtonContext","staticRenderFns","data","userName","phoneNumber","password","imgCode","smsCode","verifyToken","verifyUniqid","originalMode","computed","get","set","graphicVerify","slideVerify","created","methods","loginDevice","_context","verifySecuretedCode","securePassword","code","msg","_this","setAuthentication","smsSignIn","_this2","login","getImageCode","codeType","_this3","smsCount","sendCode","_this4","className","message","confirmButtonColor","confirmButtonText","cancelButtonText","beforeClose","_this5","done","mounted","appId","apiServer","style","success","_that","fail","component","q","url","method","uploadLargeVideo","opts","arguments","length","undefined","vm","$toast","Promise","resolve","reject","showPassowordKeyboard","$once","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","prev","next","abrupt","stop","_x","apply","verifyGoogleAuth","userInfo","isGoogleAuthenticator","setTimeout","_ref2","_callee2","_yield$checkGoogleAut","ok","_context2","checkGoogleAuthenticator","safeCode","sent","_x2"],"sourceRoot":""}