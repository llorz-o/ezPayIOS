{"version":3,"file":"js/5948.29e5bfaa.js","mappings":"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","sources":["webpack://ez_pay/./src/views/user_security/bind_google_auth.vue?a527","webpack://ez_pay/src/views/user_security/bind_google_auth.vue","webpack://ez_pay/./src/views/user_security/bind_google_auth.vue?f682","webpack://ez_pay/./src/views/user_security/bind_google_auth.vue","webpack://ez_pay/./src/vendor/globalVerify.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page bind-google-auth\"},[(_vm.step === 1)?[_c('div',{staticClass:\"tips\"},[_vm._v(\" 使用Google Authenticator扫码或输入设置密钥以绑定 \")]),_c('van-image',{attrs:{\"id\":\"qrcode\",\"src\":_vm.authInfo.qrCodeUrl},scopedSlots:_vm._u([{key:\"loading\",fn:function(){return [_c('van-loading',{attrs:{\"type\":\"spinner\",\"size\":\"20\"}})]},proxy:true},{key:\"error\",fn:function(){return [_c('van-icon',{attrs:{\"name\":\"qr-invalid\"}})]},proxy:true}],null,false,3262582198)}),_c('div',{staticClass:\"copyWrapper\"},[_c('span',{staticClass:\"key\"},[_vm._v(_vm._s(_vm.authInfo.secret))]),_c('button',{directives:[{name:\"clipboard\",rawName:\"v-clipboard\",value:(_vm.authInfo.secret),expression:\"authInfo.secret\"}],staticClass:\"icon copy copyBtn\",on:{\"success\":_vm.$root.copySuccessful}})]),_c('van-button',{staticClass:\"block primary next\",on:{\"click\":function($event){_vm.step = 2}}},[_vm._v(\" 扫码或添加密钥完成 \")]),_c('div',{staticClass:\"guide danger_text\"},[_vm._v(\" 如何下载、绑定谷歌身份验证器？ \")])]:[_c('div',{staticClass:\"tips\"},[_vm._v(\" 输入动态验证码以验证身份 \")]),_c('van-password-input',{attrs:{\"value\":_vm.password,\"focused\":_vm.showKeyboard},on:{\"focus\":function($event){_vm.showKeyboard = true}}}),_c('van-number-keyboard',{attrs:{\"show\":_vm.showKeyboard},on:{\"blur\":function($event){_vm.showKeyboard = false}},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}}),_c('div',{staticClass:\"guide danger_text step2\"},[_vm._v(\" 绑定后，使用钱包充值游戏平台，卖币确认转币 需要通过谷歌身份验证器验证 \")]),_c('van-button',{staticClass:\"block primary\",on:{\"click\":_vm.checkBindGoogleAuthenticator}},[_vm._v(\" 验证 \")]),_c('van-button',{staticClass:\"block secondary\",on:{\"click\":function($event){_vm.step = 1}}},[_vm._v(\" 取消 \")])]],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"page bind-google-auth\">\n    <template v-if=\"step === 1\">\n      <div class=\"tips\">\n        使用Google Authenticator扫码或输入设置密钥以绑定\n      </div>\n      <van-image id=\"qrcode\" :src=\"authInfo.qrCodeUrl\">\n        <template #loading>\n          <van-loading type=\"spinner\" size=\"20\"/>\n        </template>\n        <template #error>\n          <van-icon name=\"qr-invalid\"/>\n        </template>\n      </van-image>\n      <div class=\"copyWrapper\">\n        <span class=\"key\">{{ authInfo.secret }}</span>\n        <button class=\"icon copy copyBtn\"\n                v-clipboard=\"authInfo.secret\"\n                @success=\"$root.copySuccessful\"/>\n      </div>\n      <van-button class=\"block primary next\" @click=\"step = 2\">\n        扫码或添加密钥完成\n      </van-button>\n      <div class=\"guide danger_text\">\n        如何下载、绑定谷歌身份验证器？\n      </div>\n    </template>\n    <template v-else>\n      <div class=\"tips\">\n        输入动态验证码以验证身份\n      </div>\n      <van-password-input :value=\"password\"\n                          :focused=\"showKeyboard\"\n                          @focus=\"showKeyboard = true\">\n\n      </van-password-input>\n      <van-number-keyboard v-model=\"password\"\n                           :show=\"showKeyboard\"\n                           @blur=\"showKeyboard = false\">\n\n      </van-number-keyboard>\n      <div class=\"guide danger_text step2\">\n        绑定后，使用钱包充值游戏平台，卖币确认转币 需要通过谷歌身份验证器验证\n      </div>\n      <van-button class=\"block primary\" @click=\"checkBindGoogleAuthenticator\">\n        验证\n      </van-button>\n      <van-button class=\"block secondary\" @click=\"step = 1\">\n        取消\n      </van-button>\n    </template>\n\n  </div>\n</template>\n\n<script>\nimport {NumberKeyboard, PasswordInput} from \"vant\";\nimport {bindGoogleAuthenticator, checkBindGoogleAuthenticator} from \"@/apis/user\";\nimport {verifySecuretedCode} from \"@/vendor/globalVerify\";\n\nexport default {\n  components: {\n    [NumberKeyboard.name]: NumberKeyboard,\n    [PasswordInput.name]: PasswordInput\n  },\n  data() {\n    return {\n      step: 1,\n      password: '',\n      showKeyboard: false,\n      authInfo: {\n        qrCodeUrl: \"\",\n        secret: \"\"\n      },\n    }\n  },\n  watch: {\n    password(password) {\n      if (password.length === 6) {\n        this.showKeyboard = false\n      }\n    }\n  },\n  created() {\n    this.$root.$emit(\"root:set-topbar\", []);\n  },\n  methods: {\n    async bindGoogleAuthenticator(securePassword) {\n      const {ok, data, msg} = await bindGoogleAuthenticator({securePassword})\n      if (ok) {\n        this.authInfo = {...(data || {})}\n        this.$toast.success(msg);\n      } else {\n        this.$toast.fail(msg)\n        this.$router.back()\n      }\n    },\n    async checkBindGoogleAuthenticator() {\n      if (this.password.length !== 6) return this.$toast.fail(\"请输入google验证码\")\n      const {ok, msg} = await checkBindGoogleAuthenticator({\n        safeCode: this.password,\n        secret: this.authInfo.secret,\n      })\n      if (ok) {\n        this.$toast.success(msg);\n        await this.$root.fetchUserInfo()\n        this.$router.back()\n      } else {\n        this.$toast.fail(msg)\n      }\n    }\n  },\n  beforeRouteEnter(to, from, next) {\n    next(vm => {\n      vm.$dialog({\n        className: \"common\",\n        title: \"请输入资金密码\",\n        message: \"为了您的账户安全，绑定谷歌验证器需要验证资金密码\",\n        confirmButtonText: \"确认\",\n        beforeClose: async (action, done) => {\n          done()\n          const val = await verifySecuretedCode(vm)\n          if (val && val.length === 6) {\n            vm.$root.$emit(\"root:set-topbar\", [\"left-back\"]);\n            await vm.bindGoogleAuthenticator(val)\n          } else {\n            if(val === 'close-by-route-change') return\n            setTimeout(() => vm.$router.back(), 350)\n          }\n        }\n      })\n    })\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.bind-google-auth {\n  .tips {\n    font-size: 12px;\n    text-align: center;\n    margin: 20px 25px 0;\n  }\n\n  #qrcode {\n    display: block;\n    margin: 20px auto;\n    width: 200px;\n    height: 200px;\n\n    .van-icon {\n      font-size: 200px;\n    }\n\n  }\n\n  .copyWrapper {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    .key {\n      min-width: 140px;\n    }\n  }\n\n  .next {\n    margin-top: 100px;\n  }\n\n  .guide {\n    margin: 10px 20px;\n    font-size: 12px;\n    text-align: center;\n\n    &.step2 {\n      margin-top: 200px;\n    }\n  }\n\n  .van-password-input {\n    margin-top: 40px;\n\n    *::after {\n      border-color: black;\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./bind_google_auth.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./bind_google_auth.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./bind_google_auth.vue?vue&type=template&id=216c7544&\"\nimport script from \"./bind_google_auth.vue?vue&type=script&lang=js&\"\nexport * from \"./bind_google_auth.vue?vue&type=script&lang=js&\"\nimport style0 from \"./bind_google_auth.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import {checkGoogleAuthenticator} from \"@/apis/user\";\n\nexport const verifySecuretedCode = vm => {\n  vm.$toast('请输入资金密码')\n  return new Promise((resolve, reject) => {\n    vm.$root.showPassowordKeyboard = true\n    vm.$root.$once('root:global-password', async code => resolve(code))\n  })\n}\n\nexport const verifyGoogleAuth = (vm) => {\n  if (vm.$root.userInfo && vm.$root.userInfo.isGoogleAuthenticator) {\n    vm.$toast('请输入Google安全码')\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        vm.$root.showPassowordKeyboard = true\n        vm.$root.$once('root:global-password', async code => {\n          if (!code || code === 'close-by-route-change') return resolve(false)\n          const {ok, msg} = await checkGoogleAuthenticator({safeCode: code})\n          if (ok) {\n            resolve(true)\n          } else {\n            resolve(false)\n            vm.$toast.fail(msg)\n          }\n        })\n      }, 0)\n    })\n  } else {\n    return Promise.resolve(true)\n  }\n\n}\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","step","_v","attrs","authInfo","qrCodeUrl","scopedSlots","_u","key","fn","proxy","_s","secret","directives","name","rawName","value","expression","on","$root","copySuccessful","$event","password","showKeyboard","model","callback","$$v","checkBindGoogleAuthenticator","staticRenderFns","components","NumberKeyboard","PasswordInput","data","watch","created","methods","bindGoogleAuthenticator","_context","securePassword","_yield$_bindGoogleAut","ok","msg","_this","_this2","_context2","safeCode","_yield$_checkBindGoog","beforeRouteEnter","next","vm","className","title","message","confirmButtonText","beforeClose","done","_context3","verifySecuretedCode","val","setTimeout","component","$toast","Promise","resolve","reject","showPassowordKeyboard","$once","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","code","wrap","prev","abrupt","stop","_x","apply","arguments","verifyGoogleAuth","userInfo","isGoogleAuthenticator","_ref2","_callee2","_yield$checkGoogleAut","checkGoogleAuthenticator","sent","fail","_x2"],"sourceRoot":""}