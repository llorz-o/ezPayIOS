{"version":3,"file":"js/6225.441b1fd6.js","mappings":"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","sources":["webpack://ez_pay/./src/views/add_payment/index.vue?97e6","webpack://ez_pay/src/qr-scanner.ts","webpack://ez_pay/./src/views/add_payment/components/verify-field.vue?899f","webpack://ez_pay/src/views/add_payment/components/verify-field.vue","webpack://ez_pay/./src/views/add_payment/components/verify-field.vue?9d2c","webpack://ez_pay/./src/views/add_payment/components/verify-field.vue","webpack://ez_pay/src/views/add_payment/index.vue","webpack://ez_pay/./src/views/add_payment/index.vue?0917","webpack://ez_pay/./src/views/add_payment/index.vue","webpack://ez_pay/./src/apis/verify.js","webpack://ez_pay/./src/vendor/globalVerify.js","webpack://ez_pay/./src/vendor/mixins.js"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page page-add_payment\"},[_c('div',{attrs:{\"id\":\"reader-2\"}}),_c('div',{staticClass:\"title title_line\"},[_vm._v(\"请选择收款方式\")]),_c('van-radio-group',{model:{value:(_vm.payment),callback:function ($$v) {_vm.payment=$$v},expression:\"payment\"}},[_c('van-cell-group',[_c('van-cell',{attrs:{\"clickable\":\"\",\"title\":\"银行卡\"},on:{\"click\":function($event){_vm.payment = 1}},scopedSlots:_vm._u([{key:\"icon\",fn:function(){return [_c('div',{staticClass:\"payment-icon bank\"})]},proxy:true},{key:\"right-icon\",fn:function(){return [_c('van-radio',{attrs:{\"name\":1}})]},proxy:true}])}),(!_vm.hideAlipayWechat)?_c('van-cell',{attrs:{\"clickable\":\"\",\"title\":\"支付宝\"},on:{\"click\":function($event){_vm.payment = 2}},scopedSlots:_vm._u([{key:\"icon\",fn:function(){return [_c('div',{staticClass:\"payment-icon ali\"})]},proxy:true},{key:\"right-icon\",fn:function(){return [_c('van-radio',{attrs:{\"name\":2}})]},proxy:true}],null,false,364612125)}):_vm._e(),(!_vm.hideAlipayWechat)?_c('van-cell',{attrs:{\"clickable\":\"\",\"title\":\"微信\"},on:{\"click\":function($event){_vm.payment = 4}},scopedSlots:_vm._u([{key:\"icon\",fn:function(){return [_c('div',{staticClass:\"payment-icon wechat\"})]},proxy:true},{key:\"right-icon\",fn:function(){return [_c('van-radio',{attrs:{\"name\":4}})]},proxy:true}],null,false,1810295219)}):_vm._e(),_c('van-cell',{attrs:{\"clickable\":\"\",\"title\":\"USDT\"},on:{\"click\":function($event){_vm.payment = 8}},scopedSlots:_vm._u([{key:\"icon\",fn:function(){return [_c('div',{staticClass:\"payment-icon usdt\"})]},proxy:true},{key:\"right-icon\",fn:function(){return [_c('van-radio',{attrs:{\"name\":8}})]},proxy:true}])})],1)],1),(_vm.payment === 1)?[_c('div',{staticClass:\"title secondary title_line\"},[_vm._v(\"填写银行卡信息\")]),_c('van-form',{on:{\"submit\":_vm.onSubmit}},[_c('van-field',{attrs:{\"value\":_vm.bankFormData.bankName,\"autocomplete\":\"new-password\",\"clickable\":\"\",\"input-align\":\"right\",\"label\":\"银行名称\",\"name\":\"bank\",\"placeholder\":\"请选择开户行\",\"readonly\":\"\",\"right-icon\":\"arrow\"},on:{\"click\":function($event){_vm.showBankPicker = true}}}),_c('van-field',{attrs:{\"value\":_vm.bankFormData.bankAddress,\"autocomplete\":\"new-password\",\"clickable\":\"\",\"input-align\":\"right\",\"label\":\"开户所在地\",\"name\":\"bankAddress\",\"placeholder\":\"请选择\",\"readonly\":\"\",\"right-icon\":\"arrow\"},on:{\"click\":function($event){_vm.showBankAddressPicker = true}}}),_c('van-field',{attrs:{\"autocomplete\":\"new-password\",\"input-align\":\"right\",\"label\":\"开户支行\",\"name\":\"bankBranch\",\"placeholder\":\"选填\"},model:{value:(_vm.bankFormData.bankBranch),callback:function ($$v) {_vm.$set(_vm.bankFormData, \"bankBranch\", $$v)},expression:\"bankFormData.bankBranch\"}}),(_vm.isMerchant)?_c('van-field',{attrs:{\"autocomplete\":\"new-password\",\"label\":\"姓名\",\"name\":\"name\",\"readonly\":!_vm.isMerchant},model:{value:(_vm.bankFormData.realName),callback:function ($$v) {_vm.$set(_vm.bankFormData, \"realName\", $$v)},expression:\"bankFormData.realName\"}}):_c('van-field',{attrs:{\"value\":_vm.$root.userInfo.realName,\"autocomplete\":\"new-password\",\"label\":\"姓名\",\"name\":\"name\",\"readonly\":\"\"}}),_c('van-field',{attrs:{\"autocomplete\":\"new-password\",\"label\":\"卡号\",\"name\":\"bankNo\",\"placeholder\":\"储蓄卡\",\"type\":\"digit\"},model:{value:(_vm.bankFormData.bankNo),callback:function ($$v) {_vm.$set(_vm.bankFormData, \"bankNo\", $$v)},expression:\"bankFormData.bankNo\"}}),_c('van-field',{attrs:{\"autocomplete\":\"new-password\",\"label\":\"资金密码\",\"maxlength\":\"6\",\"name\":\"securePassword\",\"placeholder\":\"6位纯数字资金密码\",\"type\":_vm.$root.dynamicPasswordInputType},model:{value:(_vm.bankFormData.securePassword),callback:function ($$v) {_vm.$set(_vm.bankFormData, \"securePassword\", $$v)},expression:\"bankFormData.securePassword\"}}),_c('verify-field',{on:{\"uniqid\":function (v) { return (_vm.bankFormData.verifyUniqid = v); }},model:{value:(_vm.bankFormData.code),callback:function ($$v) {_vm.$set(_vm.bankFormData, \"code\", $$v)},expression:\"bankFormData.code\"}}),_c('van-button',{staticClass:\"block primary\",attrs:{\"native-type\":\"submit\"}},[_vm._v(\" 确定添加 \")])],1)]:_vm._e(),(_vm.payment === 2)?[_c('div',{staticClass:\"title secondary title_line\"},[_vm._v(\"填写支付宝信息\")]),_c('van-form',{on:{\"submit\":_vm.onSubmit}},[_c('van-field',{attrs:{\"label\":\"支付宝账号\",\"name\":\"alipayAccount\"},model:{value:(_vm.aliFormData.alipayAccount),callback:function ($$v) {_vm.$set(_vm.aliFormData, \"alipayAccount\", $$v)},expression:\"aliFormData.alipayAccount\"}}),(_vm.isMerchant)?_c('van-field',{attrs:{\"autocomplete\":\"new-password\",\"label\":\"真实姓名\",\"name\":\"name\",\"readonly\":!_vm.isMerchant},model:{value:(_vm.aliFormData.realName),callback:function ($$v) {_vm.$set(_vm.aliFormData, \"realName\", $$v)},expression:\"aliFormData.realName\"}}):_c('van-field',{attrs:{\"value\":_vm.$root.userInfo.realName,\"autocomplete\":\"new-password\",\"label\":\"真实姓名\",\"name\":\"name\",\"readonly\":\"\"}}),_c('van-field',{attrs:{\"value\":_vm.aliFormData.address,\"autocomplete\":\"new-password\",\"clickable\":\"\",\"input-align\":\"right\",\"label\":\"所在地区\",\"name\":\"address\",\"readonly\":\"\",\"right-icon\":\"arrow\"},on:{\"click\":function($event){_vm.showBankAddressPicker = true}}}),_c('div',{staticClass:\"uploadWrapper\"},[_c('van-uploader',{attrs:{\"after-read\":function (file) { return _vm.afterRead(file, 'ali'); },\"max-count\":1,\"image-fit\":\"contain\",\"preview-full-image\":\"\",\"result-type\":\"file\"},nativeOn:{\"click\":function($event){return (function (e) { return _vm.onClickUpload('ali', e); }).apply(null, arguments)}},model:{value:(_vm.aliFormData.receiptCode),callback:function ($$v) {_vm.$set(_vm.aliFormData, \"receiptCode\", $$v)},expression:\"aliFormData.receiptCode\"}},[_c('van-button',{staticClass:\"upload\"},[_c('van-icon',{attrs:{\"name\":\"plus\"}}),_c('div',{staticClass:\"text\"},[_vm._v(\"请上传收款码\")])],1)],1)],1),_c('van-field',{attrs:{\"autocomplete\":\"new-password\",\"label\":\"资金密码\",\"maxlength\":\"6\",\"name\":\"securePassword\",\"placeholder\":\"6位纯数字资金密码\",\"type\":_vm.$root.dynamicPasswordInputType},model:{value:(_vm.aliFormData.securePassword),callback:function ($$v) {_vm.$set(_vm.aliFormData, \"securePassword\", $$v)},expression:\"aliFormData.securePassword\"}}),_c('verify-field',{on:{\"uniqid\":function (v) { return (_vm.aliFormData.verifyUniqid = v); }},model:{value:(_vm.aliFormData.code),callback:function ($$v) {_vm.$set(_vm.aliFormData, \"code\", $$v)},expression:\"aliFormData.code\"}}),_c('van-button',{staticClass:\"block primary\",attrs:{\"disabled\":_vm.submitLoading,\"loading\":_vm.submitLoading,\"native-type\":\"submit\"}},[_vm._v(\" 确定添加 \")])],1),_c('div',{staticClass:\"example\",on:{\"click\":function($event){return _vm.$router.push('/how_to_save_receive_code')}}},[_vm._v(\"如何保存收款码？\")])]:_vm._e(),(_vm.payment === 4)?[_c('div',{staticClass:\"title secondary title_line\"},[_vm._v(\"填写微信信息\")]),_c('van-form',{on:{\"submit\":_vm.onSubmit}},[_c('van-field',{attrs:{\"label\":\"姓名\",\"name\":\"wxRealname\",\"placeholder\":\"微信实名姓名\"},model:{value:(_vm.wechatFormData.wxRealname),callback:function ($$v) {_vm.$set(_vm.wechatFormData, \"wxRealname\", $$v)},expression:\"wechatFormData.wxRealname\"}}),(_vm.isMerchant)?_c('van-field',{attrs:{\"autocomplete\":\"new-password\",\"label\":\"真实姓名\",\"name\":\"name\",\"readonly\":!_vm.isMerchant},model:{value:(_vm.wechatFormData.realName),callback:function ($$v) {_vm.$set(_vm.wechatFormData, \"realName\", $$v)},expression:\"wechatFormData.realName\"}}):_c('van-field',{attrs:{\"value\":_vm.$root.userInfo.realName,\"autocomplete\":\"new-password\",\"label\":\"真实姓名\",\"name\":\"name\",\"readonly\":\"\"}}),_c('van-field',{attrs:{\"value\":_vm.wechatFormData.address,\"autocomplete\":\"new-password\",\"clickable\":\"\",\"input-align\":\"right\",\"label\":\"所在地区\",\"name\":\"address\",\"readonly\":\"\",\"right-icon\":\"arrow\"},on:{\"click\":function($event){_vm.showBankAddressPicker = true}}}),_c('div',{staticClass:\"uploadWrapper\"},[_c('van-uploader',{class:{ disableFile: _vm.$root.isH5Plus },attrs:{\"after-read\":function (file) { return _vm.afterRead(file, 'wechat'); },\"max-count\":1,\"image-fit\":\"contain\",\"preview-full-image\":\"\",\"result-type\":\"file\"},nativeOn:{\"click\":function($event){return (function (e) { return _vm.onClickUpload('wechat', e); }).apply(null, arguments)}},model:{value:(_vm.wechatFormData.receiptCode),callback:function ($$v) {_vm.$set(_vm.wechatFormData, \"receiptCode\", $$v)},expression:\"wechatFormData.receiptCode\"}},[_c('van-button',{staticClass:\"upload\"},[_c('van-icon',{attrs:{\"name\":\"plus\"}}),_c('div',{staticClass:\"text\"},[_vm._v(\"请上传收款码\")])],1)],1)],1),_c('van-field',{attrs:{\"autocomplete\":\"new-password\",\"label\":\"资金密码\",\"maxlength\":\"6\",\"name\":\"securePassword\",\"placeholder\":\"6位纯数字资金密码\",\"type\":_vm.$root.dynamicPasswordInputType},model:{value:(_vm.wechatFormData.securePassword),callback:function ($$v) {_vm.$set(_vm.wechatFormData, \"securePassword\", $$v)},expression:\"wechatFormData.securePassword\"}}),_c('verify-field',{on:{\"uniqid\":function (v) { return (_vm.wechatFormData.verifyUniqid = v); }},model:{value:(_vm.wechatFormData.code),callback:function ($$v) {_vm.$set(_vm.wechatFormData, \"code\", $$v)},expression:\"wechatFormData.code\"}}),_c('van-button',{staticClass:\"block primary\",attrs:{\"native-type\":\"submit\"}},[_vm._v(\" 确定添加 \")])],1),_c('div',{staticClass:\"example\",on:{\"click\":function($event){return _vm.$router.push('/how_to_save_receive_code/1')}}},[_vm._v(\" 如何保存收款码？ \")])]:_vm._e(),(_vm.payment === 8)?[_c('div',{staticClass:\"title secondary title_line\"},[_vm._v(\"填写USDT收款信息\")]),_c('van-form',{on:{\"submit\":_vm.onSubmit}},[_c('van-field',{attrs:{\"value\":_vm.usdtFormData.address,\"autocomplete\":\"new-password\",\"clickable\":\"\",\"input-align\":\"right\",\"label\":\"所在地区\",\"name\":\"address\",\"readonly\":\"\",\"right-icon\":\"arrow\"},on:{\"click\":function($event){_vm.showBankAddressPicker = true}}}),_c('van-field',{attrs:{\"label\":\"收款地址\",\"name\":\"usdtAddress\",\"placeholder\":\"USDT收款地址(TRC20)\"},model:{value:(_vm.usdtFormData.usdtAddress),callback:function ($$v) {_vm.$set(_vm.usdtFormData, \"usdtAddress\", $$v)},expression:\"usdtFormData.usdtAddress\"}}),_c('van-field',{attrs:{\"autocomplete\":\"new-password\",\"label\":\"资金密码\",\"maxlength\":\"6\",\"name\":\"securePassword\",\"placeholder\":\"6位纯数字资金密码\",\"type\":_vm.$root.dynamicPasswordInputType},model:{value:(_vm.usdtFormData.securePassword),callback:function ($$v) {_vm.$set(_vm.usdtFormData, \"securePassword\", $$v)},expression:\"usdtFormData.securePassword\"}}),_c('verify-field',{on:{\"uniqid\":function (v) { return (_vm.usdtFormData.verifyUniqid = v); }},model:{value:(_vm.usdtFormData.code),callback:function ($$v) {_vm.$set(_vm.usdtFormData, \"code\", $$v)},expression:\"usdtFormData.code\"}}),_c('van-button',{staticClass:\"block primary\",attrs:{\"native-type\":\"submit\"}},[_vm._v(\" 确定添加 \")])],1)]:_vm._e(),_c('van-popup',{attrs:{\"position\":\"bottom\",\"safe-area-inset-bottom\":\"\"},on:{\"close\":function($event){_vm.bankName = ''}},model:{value:(_vm.showBankPicker),callback:function ($$v) {_vm.showBankPicker=$$v},expression:\"showBankPicker\"}},[_c('van-field',{attrs:{\"placeholder\":\"输入关键字搜索银行\"},model:{value:(_vm.bankName),callback:function ($$v) {_vm.bankName=$$v},expression:\"bankName\"}}),_c('van-picker',{attrs:{\"columns\":_vm.filteredBanks,\"show-toolbar\":\"\",\"value-key\":\"bankName\"},on:{\"cancel\":function($event){_vm.showBankPicker = false},\"confirm\":_vm.onConfirmPickBank}})],1),_c('van-popup',{attrs:{\"position\":\"bottom\",\"safe-area-inset-bottom\":\"\"},model:{value:(_vm.showBankAddressPicker),callback:function ($$v) {_vm.showBankAddressPicker=$$v},expression:\"showBankAddressPicker\"}},[_c('van-area',{attrs:{\"area-list\":_vm.areaList,\"columns-num\":2,\"title\":\"标题\"},on:{\"confirm\":_vm.onConfirmAddress}})],1)],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","class QrScanner {\n    static readonly DEFAULT_CANVAS_SIZE = 400;\n    static readonly NO_QR_CODE_FOUND = 'No QR code found';\n    private static _disableBarcodeDetector = false;\n    private static _workerMessageId = 0;\n\n    /** @deprecated */\n    static set WORKER_PATH(workerPath: string) {\n        console.warn('Setting QrScanner.WORKER_PATH is not required and not supported anymore. '\n            + 'Have a look at the README for new setup instructions.');\n    }\n\n    static async hasCamera(): Promise<boolean> {\n        try {\n            return !!(await QrScanner.listCameras(false)).length;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    static async listCameras(requestLabels = false): Promise<Array<QrScanner.Camera>> {\n        if (!navigator.mediaDevices) return [];\n\n        const enumerateCameras = async (): Promise<Array<MediaDeviceInfo>> =>\n            (await navigator.mediaDevices.enumerateDevices()).filter((device) => device.kind === 'videoinput');\n\n        // Note that enumerateDevices can always be called and does not prompt the user for permission.\n        // However, enumerateDevices only includes device labels if served via https and an active media stream exists\n        // or permission to access the camera was given. Therefore, if we're not getting labels but labels are requested\n        // ask for camera permission by opening a stream.\n        let openedStream: MediaStream | undefined;\n        try {\n            if (requestLabels && (await enumerateCameras()).every((camera) => !camera.label)) {\n                openedStream = await navigator.mediaDevices.getUserMedia({ audio: false, video: true });\n            }\n        } catch (e) {\n            // Fail gracefully, especially if the device has no camera or on mobile when the camera is already in use\n            // and some browsers disallow a second stream.\n        }\n\n        try {\n            return (await enumerateCameras()).map((camera, i) => ({\n                id: camera.deviceId,\n                label: camera.label || (i === 0 ? 'Default Camera' : `Camera ${i + 1}`),\n            }));\n        } finally {\n            // close the stream we just opened for getting camera access for listing the device labels\n            if (openedStream) {\n                console.warn('Call listCameras after successfully starting a QR scanner to avoid creating '\n                    + 'a temporary video stream');\n                QrScanner._stopVideoStream(openedStream);\n            }\n        }\n    }\n\n    readonly $video: HTMLVideoElement;\n    readonly $canvas: HTMLCanvasElement;\n    readonly $overlay?: HTMLDivElement;\n    private readonly $codeOutlineHighlight?: SVGSVGElement;\n    private readonly _onDecode?: (result: QrScanner.ScanResult) => void;\n    private readonly _legacyOnDecode?: (result: string) => void;\n    private readonly _legacyCanvasSize: number = QrScanner.DEFAULT_CANVAS_SIZE;\n    private _preferredCamera: QrScanner.FacingMode | QrScanner.DeviceId = 'environment';\n    private readonly _maxScansPerSecond: number = 25;\n    private _lastScanTimestamp: number = -1;\n    private _scanRegion: QrScanner.ScanRegion;\n    private _codeOutlineHighlightRemovalTimeout?: number;\n    private _qrEnginePromise: Promise<Worker | BarcodeDetector>\n    private _active: boolean = false;\n    private _paused: boolean = false;\n    private _flashOn: boolean = false;\n    private _destroyed: boolean = false;\n\n    constructor(\n        video: HTMLVideoElement,\n        onDecode: (result: QrScanner.ScanResult) => void,\n        options: {\n            onDecodeError?: (error: Error | string) => void,\n            calculateScanRegion?: (video: HTMLVideoElement) => QrScanner.ScanRegion,\n            preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n            maxScansPerSecond?: number;\n            highlightScanRegion?: boolean,\n            highlightCodeOutline?: boolean,\n            overlay?: HTMLDivElement,\n            /** just a temporary flag until we switch entirely to the new api */\n            returnDetailedScanResult?: true,\n        },\n    );\n    /** @deprecated */\n    constructor(\n        video: HTMLVideoElement,\n        onDecode: (result: string) => void,\n        onDecodeError?: (error: Error | string) => void,\n        calculateScanRegion?: (video: HTMLVideoElement) => QrScanner.ScanRegion,\n        preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n    );\n    /** @deprecated */\n    constructor(\n        video: HTMLVideoElement,\n        onDecode: (result: string) => void,\n        onDecodeError?: (error: Error | string) => void,\n        canvasSize?: number,\n        preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n    );\n    /** @deprecated */\n    constructor(video: HTMLVideoElement, onDecode: (result: string) => void, canvasSize?: number);\n    constructor(\n        video: HTMLVideoElement,\n        onDecode: ((result: QrScanner.ScanResult) => void) | ((result: string) => void),\n        canvasSizeOrOnDecodeErrorOrOptions?: number | ((error: Error | string) => void) | {\n            onDecodeError?: (error: Error | string) => void,\n            calculateScanRegion?: (video: HTMLVideoElement) => QrScanner.ScanRegion,\n            preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n            maxScansPerSecond?: number;\n            highlightScanRegion?: boolean,\n            highlightCodeOutline?: boolean,\n            overlay?: HTMLDivElement,\n            /** just a temporary flag until we switch entirely to the new api */\n            returnDetailedScanResult?: true,\n        },\n        canvasSizeOrCalculateScanRegion?: number | ((video: HTMLVideoElement) => QrScanner.ScanRegion),\n        preferredCamera?: QrScanner.FacingMode | QrScanner.DeviceId,\n    ) {\n        this.$video = video;\n        this.$canvas = document.createElement('canvas');\n\n        if (canvasSizeOrOnDecodeErrorOrOptions && typeof canvasSizeOrOnDecodeErrorOrOptions === 'object') {\n            // we got an options object using the new api\n            this._onDecode = onDecode as QrScanner['_onDecode'];\n        } else {\n            if (canvasSizeOrOnDecodeErrorOrOptions || canvasSizeOrCalculateScanRegion || preferredCamera) {\n                console.warn('You\\'re using a deprecated version of the QrScanner constructor which will be removed in '\n                    + 'the future');\n            } else {\n                // Only video and onDecode were specified and we can't distinguish between new or old api usage. For\n                // backwards compatibility we have to assume the old api for now. The options object is marked as non-\n                // optional in the parameter list above to make clear that ScanResult instead of string is only passed\n                // if an options object was provided. However, in the future once legacy support is removed, the options\n                // object should become optional.\n                console.warn('Note that the type of the scan result passed to onDecode will change in the future. '\n                    + 'To already switch to the new api today, you can pass returnDetailedScanResult: true.');\n            }\n            this._legacyOnDecode = onDecode as QrScanner['_legacyOnDecode'];\n        }\n\n        const options = typeof canvasSizeOrOnDecodeErrorOrOptions === 'object'\n            ? canvasSizeOrOnDecodeErrorOrOptions\n            : {};\n        this._onDecodeError = options.onDecodeError || (typeof canvasSizeOrOnDecodeErrorOrOptions === 'function'\n            ? canvasSizeOrOnDecodeErrorOrOptions\n            : this._onDecodeError);\n        this._calculateScanRegion = options.calculateScanRegion || (typeof canvasSizeOrCalculateScanRegion==='function'\n            ? canvasSizeOrCalculateScanRegion\n            : this._calculateScanRegion);\n        this._preferredCamera = options.preferredCamera || preferredCamera || this._preferredCamera;\n        this._legacyCanvasSize = typeof canvasSizeOrOnDecodeErrorOrOptions === 'number'\n            ? canvasSizeOrOnDecodeErrorOrOptions\n            : typeof canvasSizeOrCalculateScanRegion === 'number'\n                ? canvasSizeOrCalculateScanRegion\n                : this._legacyCanvasSize;\n        this._maxScansPerSecond = options.maxScansPerSecond || this._maxScansPerSecond;\n\n        this._onPlay = this._onPlay.bind(this);\n        this._onLoadedMetaData = this._onLoadedMetaData.bind(this);\n        this._onVisibilityChange = this._onVisibilityChange.bind(this);\n        this._updateOverlay = this._updateOverlay.bind(this);\n\n        // @ts-ignore\n        video.disablePictureInPicture = true;\n        // Allow inline playback on iPhone instead of requiring full screen playback,\n        // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n        // @ts-ignore\n        video.playsInline = true;\n        // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n        // includes no audio, but just to be safe.\n        video.muted = true;\n\n        // Avoid Safari stopping the video stream on a hidden video.\n        // See https://github.com/cozmo/jsQR/issues/185\n        let shouldHideVideo = false;\n        if (video.hidden) {\n            video.hidden = false;\n            shouldHideVideo = true;\n        }\n        if (!document.body.contains(video)) {\n            document.body.appendChild(video);\n            shouldHideVideo = true;\n        }\n        const videoContainer = video.parentElement!;\n\n        if (options.highlightScanRegion || options.highlightCodeOutline) {\n            const gotExternalOverlay = !!options.overlay;\n            this.$overlay = options.overlay || document.createElement('div');\n            const overlayStyle = this.$overlay.style;\n            overlayStyle.position = 'absolute';\n            overlayStyle.display = 'none';\n            overlayStyle.pointerEvents = 'none';\n            this.$overlay.classList.add('scan-region-highlight');\n            if (!gotExternalOverlay && options.highlightScanRegion) {\n                // default style; can be overwritten via css, e.g. by changing the svg's stroke color, hiding the\n                // .scan-region-highlight-svg, setting a border, outline, background, etc.\n                this.$overlay.innerHTML = '<svg class=\"scan-region-highlight-svg\" viewBox=\"0 0 238 238\" '\n                    + 'preserveAspectRatio=\"none\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;'\n                    + 'fill:none;stroke:#e9b213;stroke-width:4;stroke-linecap:round;stroke-linejoin:round\">'\n                    + '<path d=\"M31 2H10a8 8 0 0 0-8 8v21M207 2h21a8 8 0 0 1 8 8v21m0 176v21a8 8 0 0 1-8 8h-21m-176 '\n                    + '0H10a8 8 0 0 1-8-8v-21\"/></svg>';\n                try {\n                    this.$overlay.firstElementChild!.animate({ transform: ['scale(.98)', 'scale(1.01)'] }, {\n                        duration: 400,\n                        iterations: Infinity,\n                        direction: 'alternate',\n                        easing: 'ease-in-out',\n                    });\n                } catch (e) {}\n                videoContainer.insertBefore(this.$overlay, this.$video.nextSibling);\n            }\n            if (options.highlightCodeOutline) {\n                // default style; can be overwritten via css\n                this.$overlay.insertAdjacentHTML(\n                    'beforeend',\n                    '<svg class=\"code-outline-highlight\" preserveAspectRatio=\"none\" style=\"display:none;width:100%;'\n                        + 'height:100%;fill:none;stroke:#e9b213;stroke-width:5;stroke-dasharray:25;'\n                        + 'stroke-linecap:round;stroke-linejoin:round\"><polygon/></svg>',\n                );\n                this.$codeOutlineHighlight = this.$overlay.lastElementChild as SVGSVGElement;\n            }\n        }\n        this._scanRegion = this._calculateScanRegion(video);\n\n        requestAnimationFrame(() => {\n            // Checking in requestAnimationFrame which should avoid a potential additional re-flow for getComputedStyle.\n            const videoStyle = window.getComputedStyle(video);\n            if (videoStyle.display === 'none') {\n                video.style.setProperty('display', 'block', 'important');\n                shouldHideVideo = true;\n            }\n            if (videoStyle.visibility !== 'visible') {\n                video.style.setProperty('visibility', 'visible', 'important');\n                shouldHideVideo = true;\n            }\n            if (shouldHideVideo) {\n                // Hide the video in a way that doesn't cause Safari to stop the playback.\n                console.warn('QrScanner has overwritten the video hiding style to avoid Safari stopping the playback.');\n                video.style.opacity = '0';\n                video.style.width = '0';\n                video.style.height = '0';\n                if (this.$overlay && this.$overlay.parentElement) {\n                    this.$overlay.parentElement.removeChild(this.$overlay);\n                }\n                // @ts-ignore\n                delete this.$overlay!;\n                // @ts-ignore\n                delete this.$codeOutlineHighlight!;\n            }\n\n            if (this.$overlay) {\n                this._updateOverlay();\n            }\n        });\n\n        video.addEventListener('play', this._onPlay);\n        video.addEventListener('loadedmetadata', this._onLoadedMetaData);\n        document.addEventListener('visibilitychange', this._onVisibilityChange);\n        window.addEventListener('resize', this._updateOverlay);\n\n        this._qrEnginePromise = QrScanner.createQrEngine();\n    }\n\n    async hasFlash(): Promise<boolean> {\n        let stream: MediaStream | undefined;\n        try {\n            if (this.$video.srcObject) {\n                if (!(this.$video.srcObject instanceof MediaStream)) return false; // srcObject is not a camera stream\n                stream = this.$video.srcObject;\n            } else {\n                stream = (await this._getCameraStream()).stream;\n            }\n            return 'torch' in stream.getVideoTracks()[0].getSettings();\n        } catch (e) {\n            return false;\n        } finally {\n            // close the stream we just opened for detecting whether it supports flash\n            if (stream && stream !== this.$video.srcObject) {\n                console.warn('Call hasFlash after successfully starting the scanner to avoid creating '\n                    + 'a temporary video stream');\n                QrScanner._stopVideoStream(stream);\n            }\n        }\n    }\n\n    isFlashOn(): boolean {\n        return this._flashOn;\n    }\n\n    async toggleFlash(): Promise<void> {\n        if (this._flashOn) {\n            await this.turnFlashOff();\n        } else {\n            await this.turnFlashOn();\n        }\n    }\n\n    async turnFlashOn(): Promise<void> {\n        if (this._flashOn || this._destroyed) return;\n        this._flashOn = true;\n        if (!this._active || this._paused) return; // flash will be turned on later on .start()\n        try {\n            if (!await this.hasFlash()) throw 'No flash available';\n            // Note that the video track is guaranteed to exist and to be a MediaStream due to the check in hasFlash\n            await (this.$video.srcObject as MediaStream).getVideoTracks()[0].applyConstraints({\n                // @ts-ignore: constraint 'torch' is unknown to ts\n                advanced: [{ torch: true }],\n            });\n        } catch (e) {\n            this._flashOn = false;\n            throw e;\n        }\n    }\n\n    async turnFlashOff(): Promise<void> {\n        if (!this._flashOn) return;\n        // applyConstraints with torch: false does not work to turn the flashlight off, as a stream's torch stays\n        // continuously on, see https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints#torch. Therefore,\n        // we have to stop the stream to turn the flashlight off.\n        this._flashOn = false;\n        await this._restartVideoStream();\n    }\n\n    destroy(): void {\n        this.$video.removeEventListener('loadedmetadata', this._onLoadedMetaData);\n        this.$video.removeEventListener('play', this._onPlay);\n        document.removeEventListener('visibilitychange', this._onVisibilityChange);\n        window.removeEventListener('resize', this._updateOverlay);\n\n        this._destroyed = true;\n        this._flashOn = false;\n        this.stop(); // sets this._paused = true and this._active = false\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'close');\n    }\n\n    async start(): Promise<void> {\n        if (this._destroyed) throw new Error('The QR scanner can not be started as it had been destroyed.');\n        if (this._active && !this._paused) return;\n\n        if (window.location.protocol !== 'https:') {\n            // warn but try starting the camera anyways\n            console.warn('The camera stream is only accessible if the page is transferred via https.');\n        }\n\n        this._active = true;\n        if (document.hidden) return; // camera will be started as soon as tab is in foreground\n        this._paused = false;\n        if (this.$video.srcObject) {\n            // camera stream already/still set\n            await this.$video.play();\n            return;\n        }\n\n        try {\n            const { stream, facingMode } = await this._getCameraStream();\n            if (!this._active || this._paused) {\n                // was stopped in the meantime\n                QrScanner._stopVideoStream(stream);\n                return;\n            }\n            this._setVideoMirror(facingMode);\n            this.$video.srcObject = stream;\n            await this.$video.play();\n\n            // Restart the flash if it was previously on\n            if (this._flashOn) {\n                this._flashOn = false; // force turnFlashOn to restart the flash\n                this.turnFlashOn().catch(() => {});\n            }\n        } catch (e) {\n            if (this._paused) return;\n            this._active = false;\n            throw e;\n        }\n    }\n\n    stop(): void {\n        this.pause();\n        this._active = false;\n    }\n\n    async pause(stopStreamImmediately = false): Promise<boolean> {\n        this._paused = true;\n        if (!this._active) return true;\n        this.$video.pause();\n\n        if (this.$overlay) {\n            this.$overlay.style.display = 'none';\n        }\n\n        const stopStream = () => {\n            if (this.$video.srcObject instanceof MediaStream) {\n                // revoke srcObject only if it's a stream which was likely set by us\n                QrScanner._stopVideoStream(this.$video.srcObject);\n                this.$video.srcObject = null;\n            }\n        };\n\n        if (stopStreamImmediately) {\n            stopStream();\n            return true;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, 300));\n        if (!this._paused) return false;\n        stopStream();\n        return true;\n    }\n\n    async setCamera(facingModeOrDeviceId: QrScanner.FacingMode | QrScanner.DeviceId): Promise<void> {\n        if (facingModeOrDeviceId === this._preferredCamera) return;\n        this._preferredCamera = facingModeOrDeviceId;\n        // Restart the scanner with the new camera which will also update the video mirror and the scan region.\n        await this._restartVideoStream();\n    }\n\n    static async scanImage(\n        imageOrFileOrBlobOrUrl: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement | File | Blob | URL | String,\n        options: {\n            scanRegion?: QrScanner.ScanRegion | null,\n            qrEngine?: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector> | null,\n            canvas?: HTMLCanvasElement | null,\n            disallowCanvasResizing?: boolean,\n            alsoTryWithoutScanRegion?: boolean,\n            /** just a temporary flag until we switch entirely to the new api */\n            returnDetailedScanResult?: true,\n        },\n    ): Promise<QrScanner.ScanResult>;\n    /** @deprecated */\n    static async scanImage(\n        imageOrFileOrBlobOrUrl: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement | File | Blob | URL | String,\n        scanRegion?: QrScanner.ScanRegion | null,\n        qrEngine?: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector> | null,\n        canvas?: HTMLCanvasElement | null,\n        disallowCanvasResizing?: boolean,\n        alsoTryWithoutScanRegion?: boolean,\n    ): Promise<string>;\n    static async scanImage(\n        imageOrFileOrBlobOrUrl: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement | File | Blob | URL | String,\n        scanRegionOrOptions?: QrScanner.ScanRegion | {\n            scanRegion?: QrScanner.ScanRegion | null,\n            qrEngine?: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector> | null,\n            canvas?: HTMLCanvasElement | null,\n            disallowCanvasResizing?: boolean,\n            alsoTryWithoutScanRegion?: boolean,\n            /** just a temporary flag until we switch entirely to the new api */\n            returnDetailedScanResult?: true,\n        } | null,\n        qrEngine?: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector> | null,\n        canvas?: HTMLCanvasElement | null,\n        disallowCanvasResizing: boolean = false,\n        alsoTryWithoutScanRegion: boolean = false,\n    ): Promise<string | QrScanner.ScanResult> {\n        let scanRegion: QrScanner.ScanRegion | null | undefined;\n        let returnDetailedScanResult = false;\n        if (scanRegionOrOptions && (\n            'scanRegion' in scanRegionOrOptions\n            || 'qrEngine' in scanRegionOrOptions\n            || 'canvas' in scanRegionOrOptions\n            || 'disallowCanvasResizing' in scanRegionOrOptions\n            || 'alsoTryWithoutScanRegion' in scanRegionOrOptions\n            || 'returnDetailedScanResult' in scanRegionOrOptions\n        )) {\n            // we got an options object using the new api\n            scanRegion = scanRegionOrOptions.scanRegion;\n            qrEngine = scanRegionOrOptions.qrEngine;\n            canvas = scanRegionOrOptions.canvas;\n            disallowCanvasResizing = scanRegionOrOptions.disallowCanvasResizing || false;\n            alsoTryWithoutScanRegion = scanRegionOrOptions.alsoTryWithoutScanRegion || false;\n            returnDetailedScanResult = true;\n        } else if (scanRegionOrOptions || qrEngine || canvas || disallowCanvasResizing || alsoTryWithoutScanRegion) {\n            console.warn('You\\'re using a deprecated api for scanImage which will be removed in the future.');\n        } else {\n            // Only imageOrFileOrBlobOrUrl was specified and we can't distinguish between new or old api usage. For\n            // backwards compatibility we have to assume the old api for now. The options object is marked as non-\n            // optional in the parameter list above to make clear that ScanResult instead of string is only returned if\n            // an options object was provided. However, in the future once legacy support is removed, the options object\n            // should become optional.\n            console.warn('Note that the return type of scanImage will change in the future. To already switch to the '\n                + 'new api today, you can pass returnDetailedScanResult: true.');\n        }\n\n        const gotExternalEngine = !!qrEngine;\n\n        try {\n            let image: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n                | SVGImageElement;\n            let canvasContext: CanvasRenderingContext2D;\n            [qrEngine, image] = await Promise.all([\n                qrEngine || QrScanner.createQrEngine(),\n                QrScanner._loadImage(imageOrFileOrBlobOrUrl),\n            ]);\n            [canvas, canvasContext] = QrScanner._drawToCanvas(image, scanRegion, canvas, disallowCanvasResizing);\n            let detailedScanResult: QrScanner.ScanResult;\n\n            if (qrEngine instanceof Worker) {\n                const qrEngineWorker = qrEngine; // for ts to know that it's still a worker later in the event listeners\n                if (!gotExternalEngine) {\n                    // Enable scanning of inverted color qr codes.\n                    QrScanner._postWorkerMessageSync(qrEngineWorker, 'inversionMode', 'both');\n                }\n                detailedScanResult = await new Promise((resolve, reject) => {\n                    let timeout: number;\n                    let onMessage: (event: MessageEvent) => void;\n                    let onError: (error: ErrorEvent | string) => void;\n                    let expectedResponseId = -1;\n                    onMessage = (event: MessageEvent) => {\n                        if (event.data.id !== expectedResponseId) {\n                            return;\n                        }\n                        qrEngineWorker.removeEventListener('message', onMessage);\n                        qrEngineWorker.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        if (event.data.data !== null) {\n                            resolve({\n                                data: event.data.data,\n                                cornerPoints: QrScanner._convertPoints(event.data.cornerPoints, scanRegion),\n                            });\n                        } else {\n                            reject(QrScanner.NO_QR_CODE_FOUND);\n                        }\n                    };\n                    onError = (error: ErrorEvent | string) => {\n                        qrEngineWorker.removeEventListener('message', onMessage);\n                        qrEngineWorker.removeEventListener('error', onError);\n                        clearTimeout(timeout);\n                        const errorMessage = !error ? 'Unknown Error' : ((error as ErrorEvent).message || error);\n                        reject('Scanner error: ' + errorMessage);\n                    };\n                    qrEngineWorker.addEventListener('message', onMessage);\n                    qrEngineWorker.addEventListener('error', onError);\n                    timeout = setTimeout(() => onError('timeout'), 10000);\n                    const imageData = canvasContext.getImageData(0, 0, canvas!.width, canvas!.height);\n                    expectedResponseId = QrScanner._postWorkerMessageSync(\n                        qrEngineWorker,\n                        'decode',\n                        imageData,\n                        [imageData.data.buffer],\n                    );\n                });\n            } else {\n                detailedScanResult = await Promise.race([\n                    new Promise<QrScanner.ScanResult>((resolve, reject) => window.setTimeout(\n                        () => reject('Scanner error: timeout'),\n                        10000,\n                    )),\n                    (async (): Promise<QrScanner.ScanResult> => {\n                        try {\n                            const [scanResult] = await qrEngine.detect(canvas!);\n                            if (!scanResult) throw QrScanner.NO_QR_CODE_FOUND;\n                            return {\n                                data: scanResult.rawValue,\n                                cornerPoints: QrScanner._convertPoints(scanResult.cornerPoints, scanRegion),\n                            };\n                        } catch (e) {\n                            const errorMessage = (e as Error).message || e as string;\n                            if (/not implemented|service unavailable/.test(errorMessage)) {\n                                // Not implemented can apparently for some reason happen even though getSupportedFormats\n                                // in createQrScanner reported that it's supported, see issue #98.\n                                // Service unavailable can happen after some time when the BarcodeDetector crashed and\n                                // can theoretically be recovered from by creating a new BarcodeDetector. However, in\n                                // newer browsers this issue does not seem to be present anymore and therefore we do not\n                                // apply this optimization anymore but just set _disableBarcodeDetector in both cases.\n                                // Also note that if we got an external qrEngine that crashed, we should possibly notify\n                                // the caller about it, but we also don't do this here, as it's such an unlikely case.\n                                QrScanner._disableBarcodeDetector = true;\n                                // retry without passing the broken BarcodeScanner instance\n                                return QrScanner.scanImage(imageOrFileOrBlobOrUrl, {\n                                    scanRegion,\n                                    canvas,\n                                    disallowCanvasResizing,\n                                    alsoTryWithoutScanRegion,\n                                });\n                            }\n                            throw `Scanner error: ${errorMessage}`;\n                        }\n                    })(),\n                ]);\n            }\n            return returnDetailedScanResult ? detailedScanResult : detailedScanResult.data;\n        } catch (e) {\n            if (!scanRegion || !alsoTryWithoutScanRegion) throw e;\n            const detailedScanResult = await QrScanner.scanImage(\n                imageOrFileOrBlobOrUrl,\n                { qrEngine, canvas, disallowCanvasResizing },\n            );\n            return returnDetailedScanResult ? detailedScanResult : detailedScanResult.data;\n        } finally {\n            if (!gotExternalEngine) {\n                QrScanner._postWorkerMessage(qrEngine!, 'close');\n            }\n        }\n    }\n\n    setGrayscaleWeights(red: number, green: number, blue: number, useIntegerApproximation: boolean = true): void {\n        // Note that for the native BarcodeDecoder or if the worker was destroyed, this is a no-op. However, the native\n        // implementations work also well with colored qr codes.\n        QrScanner._postWorkerMessage(\n            this._qrEnginePromise,\n            'grayscaleWeights',\n            { red, green, blue, useIntegerApproximation }\n        );\n    }\n\n    setInversionMode(inversionMode: QrScanner.InversionMode): void {\n        // Note that for the native BarcodeDecoder or if the worker was destroyed, this is a no-op. However, the native\n        // implementations scan normal and inverted qr codes by default\n        QrScanner._postWorkerMessage(this._qrEnginePromise, 'inversionMode', inversionMode);\n    }\n\n    static async createQrEngine(): Promise<Worker | BarcodeDetector>;\n    /** @deprecated */\n    static async createQrEngine(workerPath: string): Promise<Worker | BarcodeDetector>;\n    static async createQrEngine(workerPath?: string): Promise<Worker | BarcodeDetector> {\n        if (workerPath) {\n            console.warn('Specifying a worker path is not required and not supported anymore.');\n        }\n        const useNativeBarcodeDetector = !QrScanner._disableBarcodeDetector\n            && ('BarcodeDetector' in window && BarcodeDetector.getSupportedFormats\n                ? (await BarcodeDetector.getSupportedFormats()).includes('qr_code')\n                : false);\n        return useNativeBarcodeDetector\n            ? new BarcodeDetector({ formats: ['qr_code'] })\n            // @ts-ignore no types defined\n            : (import('./qr-scanner-worker.min.js') as Promise<{ createWorker: () => Worker }>)\n                .then((module) => module.createWorker());\n    }\n\n    private _onPlay(): void {\n        this._scanRegion = this._calculateScanRegion(this.$video);\n        this._updateOverlay();\n        if (this.$overlay) {\n            this.$overlay.style.display = '';\n        }\n        this._scanFrame();\n    }\n\n    private _onLoadedMetaData(): void {\n        this._scanRegion = this._calculateScanRegion(this.$video);\n        this._updateOverlay();\n    }\n\n    private _onVisibilityChange(): void {\n        if (document.hidden) {\n            this.pause();\n        } else if (this._active) {\n            this.start();\n        }\n    }\n\n    private _calculateScanRegion(video: HTMLVideoElement): QrScanner.ScanRegion {\n        // Default scan region calculation. Note that this can be overwritten in the constructor.\n        const smallestDimension = Math.min(video.videoWidth, video.videoHeight);\n        const scanRegionSize = Math.round(2 / 3 * smallestDimension);\n        return {\n            x: Math.round((video.videoWidth - scanRegionSize) / 2),\n            y: Math.round((video.videoHeight - scanRegionSize) / 2),\n            width: scanRegionSize,\n            height: scanRegionSize,\n            downScaledWidth: this._legacyCanvasSize,\n            downScaledHeight: this._legacyCanvasSize,\n        };\n    }\n\n    private _updateOverlay(): void {\n        requestAnimationFrame(() => {\n            // Running in requestAnimationFrame which should avoid a potential additional re-flow for getComputedStyle\n            // and offsetWidth, offsetHeight, offsetLeft, offsetTop.\n            if (!this.$overlay) return;\n            const video = this.$video;\n            const videoWidth = video.videoWidth;\n            const videoHeight = video.videoHeight;\n            const elementWidth = video.offsetWidth;\n            const elementHeight = video.offsetHeight;\n            const elementX = video.offsetLeft;\n            const elementY = video.offsetTop;\n\n            const videoStyle = window.getComputedStyle(video);\n            const videoObjectFit = videoStyle.objectFit;\n            const videoAspectRatio = videoWidth / videoHeight;\n            const elementAspectRatio = elementWidth / elementHeight;\n            let videoScaledWidth: number;\n            let videoScaledHeight: number;\n            switch (videoObjectFit) {\n                case 'none':\n                    videoScaledWidth = videoWidth;\n                    videoScaledHeight = videoHeight;\n                    break;\n                case 'fill':\n                    videoScaledWidth = elementWidth;\n                    videoScaledHeight = elementHeight;\n                    break;\n                default: // 'cover', 'contains', 'scale-down'\n                    if (videoObjectFit === 'cover'\n                        ? videoAspectRatio > elementAspectRatio\n                        : videoAspectRatio < elementAspectRatio) {\n                        // The scaled height is the element height\n                        // - for 'cover' if the video aspect ratio is wider than the element aspect ratio\n                        //   (scaled height matches element height and scaled width overflows element width)\n                        // - for 'contains'/'scale-down' if element aspect ratio is wider than the video aspect ratio\n                        //   (scaled height matched element height and element width overflows scaled width)\n                        videoScaledHeight = elementHeight;\n                        videoScaledWidth = videoScaledHeight * videoAspectRatio;\n                    } else {\n                        videoScaledWidth = elementWidth;\n                        videoScaledHeight = videoScaledWidth / videoAspectRatio;\n                    }\n                    if (videoObjectFit === 'scale-down') {\n                        // for 'scale-down' the dimensions are the minimum of 'contains' and 'none'\n                        videoScaledWidth = Math.min(videoScaledWidth, videoWidth);\n                        videoScaledHeight = Math.min(videoScaledHeight, videoHeight);\n                    }\n            }\n\n            // getComputedStyle is so nice to convert keywords (left, center, right, top, bottom) to percent and makes\n            // sure to set the default of 50% if only one or no component was provided, therefore we can be sure that\n            // both components are set. Additionally, it converts units other than px (e.g. rem) to px.\n            const [videoX, videoY] = videoStyle.objectPosition.split(' ').map((length, i) => {\n                const lengthValue = parseFloat(length);\n                return length.endsWith('%')\n                    ? (!i ? elementWidth - videoScaledWidth : elementHeight - videoScaledHeight) * lengthValue / 100\n                    : lengthValue;\n            });\n\n            const regionWidth = this._scanRegion.width || videoWidth;\n            const regionHeight = this._scanRegion.height || videoHeight;\n            const regionX = this._scanRegion.x || 0;\n            const regionY = this._scanRegion.y || 0;\n\n            const overlayStyle = this.$overlay.style;\n            overlayStyle.width = `${regionWidth / videoWidth * videoScaledWidth}px`;\n            overlayStyle.height = `${regionHeight / videoHeight * videoScaledHeight}px`;\n            overlayStyle.top = `${elementY + videoY + regionY / videoHeight * videoScaledHeight}px`;\n            const isVideoMirrored = /scaleX\\(-1\\)/.test(video.style.transform!);\n            overlayStyle.left = `${elementX\n                + (isVideoMirrored ? elementWidth - videoX - videoScaledWidth : videoX)\n                + (isVideoMirrored ? videoWidth - regionX - regionWidth : regionX) / videoWidth * videoScaledWidth}px`;\n            // apply same mirror as on video\n            overlayStyle.transform = video.style.transform;\n        });\n    }\n\n    private static _convertPoints(\n        points: QrScanner.Point[],\n        scanRegion?: QrScanner.ScanRegion | null,\n    ): QrScanner.Point[] {\n        if (!scanRegion) return points;\n        const offsetX = scanRegion.x || 0;\n        const offsetY = scanRegion.y || 0;\n        const scaleFactorX = scanRegion.width && scanRegion.downScaledWidth\n            ? scanRegion.width / scanRegion.downScaledWidth\n            : 1;\n        const scaleFactorY = scanRegion.height && scanRegion.downScaledHeight\n            ? scanRegion.height / scanRegion.downScaledHeight\n            : 1;\n        for (const point of points) {\n            point.x = point.x * scaleFactorX + offsetX;\n            point.y = point.y * scaleFactorY + offsetY;\n        }\n        return points;\n    }\n\n    private _scanFrame(): void {\n        if (!this._active || this.$video.paused || this.$video.ended) return;\n        // If requestVideoFrameCallback is available use that to avoid unnecessary scans on the same frame as the\n        // camera's framerate can be lower than the screen refresh rate and this._maxScansPerSecond, especially in dark\n        // settings where the exposure time is longer. Both, requestVideoFrameCallback and requestAnimationFrame are not\n        // being fired if the tab is in the background, which is what we want.\n        const requestFrame = 'requestVideoFrameCallback' in this.$video\n            // @ts-ignore\n            ? this.$video.requestVideoFrameCallback.bind(this.$video)\n            : requestAnimationFrame;\n        requestFrame(async () => {\n            if (this.$video.readyState <= 1) {\n                // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n                // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n                // This also avoids false positives for videos paused after a successful scan which remains visible on\n                // the canvas until the video is started again and ready.\n                this._scanFrame();\n                return;\n            }\n\n            const timeSinceLastScan = Date.now() - this._lastScanTimestamp;\n            const minimumTimeBetweenScans = 1000 / this._maxScansPerSecond;\n            if (timeSinceLastScan < minimumTimeBetweenScans) {\n                await new Promise((resolve) => setTimeout(resolve, minimumTimeBetweenScans - timeSinceLastScan));\n            }\n            // console.log('Scan rate:', Math.round(1000 / (Date.now() - this._lastScanTimestamp)));\n            this._lastScanTimestamp = Date.now();\n\n            let result: QrScanner.ScanResult | undefined;\n            try {\n                result = await QrScanner.scanImage(this.$video, {\n                    scanRegion: this._scanRegion,\n                    qrEngine: this._qrEnginePromise,\n                    canvas: this.$canvas,\n                });\n            } catch (error) {\n                if (!this._active) return;\n                this._onDecodeError(error as Error | string);\n            }\n\n            if (QrScanner._disableBarcodeDetector && !(await this._qrEnginePromise instanceof Worker)) {\n                // replace the disabled BarcodeDetector\n                this._qrEnginePromise = QrScanner.createQrEngine();\n            }\n\n            if (result) {\n                if (this._onDecode) {\n                    this._onDecode(result);\n                } else if (this._legacyOnDecode) {\n                    this._legacyOnDecode(result.data);\n                }\n\n                if (this.$codeOutlineHighlight) {\n                    clearTimeout(this._codeOutlineHighlightRemovalTimeout);\n                    this._codeOutlineHighlightRemovalTimeout = undefined;\n                    this.$codeOutlineHighlight.setAttribute(\n                        'viewBox',\n                        `${this._scanRegion.x || 0} `\n                            + `${this._scanRegion.y || 0} `\n                            + `${this._scanRegion.width || this.$video.videoWidth} `\n                            + `${this._scanRegion.height || this.$video.videoHeight}`,\n                    );\n                    const polygon = this.$codeOutlineHighlight.firstElementChild!;\n                    polygon.setAttribute('points', result.cornerPoints.map(({x, y}) => `${x},${y}`).join(' '));\n                    this.$codeOutlineHighlight.style.display = '';\n                }\n            } else if (this.$codeOutlineHighlight && !this._codeOutlineHighlightRemovalTimeout) {\n                // hide after timeout to make it flash less when on some frames the QR code is detected and on some not\n                this._codeOutlineHighlightRemovalTimeout = setTimeout(\n                    () => this.$codeOutlineHighlight!.style.display = 'none',\n                    100,\n                );\n            }\n\n            this._scanFrame();\n        });\n    }\n\n    private _onDecodeError(error: Error | string): void {\n        // default error handler; can be overwritten in the constructor\n        if (error === QrScanner.NO_QR_CODE_FOUND) return;\n        console.log(error);\n    }\n\n    private async _getCameraStream(): Promise<{ stream: MediaStream, facingMode: QrScanner.FacingMode }> {\n        if (!navigator.mediaDevices) throw 'Camera not found.';\n\n        const preferenceType = /^(environment|user)$/.test(this._preferredCamera)\n            ? 'facingMode'\n            : 'deviceId';\n        const constraintsWithoutCamera: Array<MediaTrackConstraints> = [{\n            width: { min: 1024 }\n        }, {\n            width: { min: 768 }\n        }, {}];\n        const constraintsWithCamera = constraintsWithoutCamera.map((constraint) => Object.assign({}, constraint, {\n            [preferenceType]: { exact: this._preferredCamera },\n        }));\n\n        for (const constraints of [...constraintsWithCamera, ...constraintsWithoutCamera]) {\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({ video: constraints, audio: false });\n                // Try to determine the facing mode from the stream, otherwise use a guess or 'environment' as\n                // default. Note that the guess is not always accurate as Safari returns cameras of different facing\n                // mode, even for exact facingMode constraints.\n                const facingMode = this._getFacingMode(stream)\n                    || (constraints.facingMode\n                        ? this._preferredCamera as QrScanner.FacingMode // a facing mode we were able to fulfill\n                        : (this._preferredCamera === 'environment'\n                            ? 'user' // switch as _preferredCamera was environment but we are not able to fulfill it\n                            : 'environment' // switch from unfulfilled user facingMode or default to environment\n                        )\n                    );\n                return { stream, facingMode };\n            } catch (e) {}\n        }\n\n        throw 'Camera not found.';\n    }\n\n    private async _restartVideoStream(): Promise<void> {\n        // Note that we always pause the stream and not only if !this._paused as even if this._paused === true, the\n        // stream might still be running, as it's by default only stopped after a delay of 300ms.\n        const wasPaused = this._paused;\n        const paused = await this.pause(true);\n        if (!paused || wasPaused || !this._active) return;\n        await this.start();\n    }\n\n    private static _stopVideoStream(stream : MediaStream): void {\n        for (const track of stream.getTracks()) {\n            track.stop(); //  note that this will also automatically turn the flashlight off\n            stream.removeTrack(track);\n        }\n    }\n\n    private _setVideoMirror(facingMode: QrScanner.FacingMode): void {\n        // in user facing mode mirror the video to make it easier for the user to position the QR code\n        const scaleFactor = facingMode === 'user'? -1 : 1;\n        this.$video.style.transform = 'scaleX(' + scaleFactor + ')';\n    }\n\n    private _getFacingMode(videoStream: MediaStream): QrScanner.FacingMode | null {\n        const videoTrack = videoStream.getVideoTracks()[0];\n        if (!videoTrack) return null; // unknown\n        // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n        return /rear|back|environment/i.test(videoTrack.label)\n            ? 'environment'\n            : /front|user|face/i.test(videoTrack.label)\n                ? 'user'\n                : null; // unknown\n    }\n\n    private static _drawToCanvas(\n        image: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement,\n        scanRegion?: QrScanner.ScanRegion | null,\n        canvas?: HTMLCanvasElement | null,\n        disallowCanvasResizing= false,\n    ): [HTMLCanvasElement, CanvasRenderingContext2D] {\n        canvas = canvas || document.createElement('canvas');\n        const scanRegionX = scanRegion && scanRegion.x ? scanRegion.x : 0;\n        const scanRegionY = scanRegion && scanRegion.y ? scanRegion.y : 0;\n        const scanRegionWidth = scanRegion && scanRegion.width\n            ? scanRegion.width\n            : (image as HTMLVideoElement).videoWidth || image.width as number;\n        const scanRegionHeight = scanRegion && scanRegion.height\n            ? scanRegion.height\n            : (image as HTMLVideoElement).videoHeight || image.height as number;\n\n        if (!disallowCanvasResizing) {\n            const canvasWidth = scanRegion && scanRegion.downScaledWidth\n                ? scanRegion.downScaledWidth\n                : scanRegionWidth;\n            const canvasHeight = scanRegion && scanRegion.downScaledHeight\n                ? scanRegion.downScaledHeight\n                : scanRegionHeight;\n            // Setting the canvas width or height clears the canvas, even if the values didn't change, therefore only\n            // set them if they actually changed.\n            if (canvas.width !== canvasWidth) {\n                canvas.width = canvasWidth;\n            }\n            if (canvas.height !== canvasHeight) {\n                canvas.height = canvasHeight;\n            }\n        }\n\n        const context = canvas.getContext('2d', { alpha: false })!;\n        context.imageSmoothingEnabled = false; // gives less blurry images\n        context.drawImage(\n            image,\n            scanRegionX, scanRegionY, scanRegionWidth, scanRegionHeight,\n            0, 0, canvas.width, canvas.height,\n        );\n        return [canvas, context];\n    }\n\n    private static async _loadImage(\n        imageOrFileOrBlobOrUrl: HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n            | SVGImageElement | File | Blob | URL | String,\n    ): Promise<HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | OffscreenCanvas | ImageBitmap\n        | SVGImageElement > {\n        if (imageOrFileOrBlobOrUrl instanceof Image) {\n            await QrScanner._awaitImageLoad(imageOrFileOrBlobOrUrl);\n            return imageOrFileOrBlobOrUrl;\n        } else if (imageOrFileOrBlobOrUrl instanceof HTMLVideoElement\n            || imageOrFileOrBlobOrUrl instanceof HTMLCanvasElement\n            || imageOrFileOrBlobOrUrl instanceof SVGImageElement\n            || 'OffscreenCanvas' in window && imageOrFileOrBlobOrUrl instanceof OffscreenCanvas\n            || 'ImageBitmap' in window && imageOrFileOrBlobOrUrl instanceof ImageBitmap) {\n            return imageOrFileOrBlobOrUrl;\n        } else if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob\n            || imageOrFileOrBlobOrUrl instanceof URL || typeof imageOrFileOrBlobOrUrl === 'string') {\n            const image = new Image();\n            if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                image.src = URL.createObjectURL(imageOrFileOrBlobOrUrl);\n            } else {\n                image.src = imageOrFileOrBlobOrUrl.toString();\n            }\n            try {\n                await QrScanner._awaitImageLoad(image);\n                return image;\n            } finally {\n                if (imageOrFileOrBlobOrUrl instanceof File || imageOrFileOrBlobOrUrl instanceof Blob) {\n                    URL.revokeObjectURL(image.src);\n                }\n            }\n        } else {\n            throw 'Unsupported image type.';\n        }\n    }\n\n    private static async _awaitImageLoad(image: HTMLImageElement): Promise<void> {\n        if (image.complete && image.naturalWidth !== 0) return; // already loaded\n        await new Promise<void>((resolve, reject) => {\n            const listener = (event: ErrorEvent | Event) => {\n                image.removeEventListener('load', listener);\n                image.removeEventListener('error', listener);\n                if (event instanceof ErrorEvent) {\n                    reject('Image load error');\n                } else {\n                    resolve();\n                }\n            };\n            image.addEventListener('load', listener);\n            image.addEventListener('error', listener);\n        });\n    }\n\n    private static async _postWorkerMessage(\n        qrEngineOrQrEnginePromise: Worker | BarcodeDetector | Promise<Worker | BarcodeDetector>,\n        type: string,\n        data?: any,\n        transfer?: Transferable[],\n    ): Promise<number> {\n        return QrScanner._postWorkerMessageSync(await qrEngineOrQrEnginePromise, type, data, transfer);\n    }\n\n    // sync version of _postWorkerMessage without performance overhead of async functions\n    private static _postWorkerMessageSync(\n        qrEngine: Worker | BarcodeDetector,\n        type: string,\n        data?: any,\n        transfer?: Transferable[],\n    ): number {\n        if (!(qrEngine instanceof Worker)) return -1;\n        const id = QrScanner._workerMessageId++;\n        qrEngine.postMessage({\n            id,\n            type,\n            data,\n        }, transfer);\n        return id;\n    }\n}\n\ndeclare namespace QrScanner {\n    export interface ScanRegion {\n        x?: number;\n        y?: number;\n        width?: number;\n        height?: number;\n        downScaledWidth?: number;\n        downScaledHeight?: number;\n    }\n\n    export type FacingMode = 'environment' | 'user';\n    export type DeviceId = string;\n\n    export interface Camera {\n        id: DeviceId;\n        label: string;\n    }\n\n    export type InversionMode = 'original' | 'invert' | 'both';\n\n    export interface Point {\n        x: number;\n        y: number;\n    }\n\n    export interface ScanResult {\n        data: string;\n        // In clockwise order, starting at top left, but this might not be guaranteed in the future.\n        cornerPoints: QrScanner.Point[];\n    }\n}\n\n// simplified from https://wicg.github.io/shape-detection-api/#barcode-detection-api\ndeclare class BarcodeDetector {\n    constructor(options?: { formats: string[] });\n    static getSupportedFormats(): Promise<string[]>;\n    detect(image: ImageBitmapSource): Promise<Array<{ rawValue: string, cornerPoints: QrScanner.Point[] }>>;\n}\n\nexport default QrScanner;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('van-field',_vm._g(_vm._b({staticClass:\"verify\",attrs:{\"label\":\"验证码\",\"placeholder\":\"图形验证码\"}},'van-field',_vm.$attrs,false),_vm.$listeners),[_c('van-image',{staticClass:\"image\",attrs:{\"slot\":\"button\",\"src\":_vm.image},on:{\"click\":_vm.flush},slot:\"button\"})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <van-field\n    class=\"verify\"\n    v-bind=\"$attrs\"\n    v-on=\"$listeners\"\n    label=\"验证码\"\n    placeholder=\"图形验证码\"\n  >\n    <van-image class=\"image\" slot=\"button\" :src=\"image\" @click=\"flush\"> </van-image>\n  </van-field>\n</template>\n\n<script>\nimport { getImageCode } from \"@/apis/verify\";\nexport default {\n  data() {\n    return {\n      image: \"\",\n    };\n  },\n  watch: {\n    \"$attrs.value\"(newVal, oldVal) {\n      if (oldVal.length === 4 && newVal.length === 0) {\n        this.flush();\n      }\n    },\n  },\n  created() {\n    this.flush();\n  },\n  methods: {\n    flush() {\n      getImageCode({\n        codeType: \"addCard\",\n      }).then(({ ok, data, code }) => {\n        if (ok) {\n          this.image = data.verifyCode;\n          this.$emit(\"uniqid\", data.verifyUniqid);\n        } else {\n          if (code === 400) return this.$toast.fail(\"请输入合法的手机号码\");\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.verify {\n  padding-top: 0;\n  padding-bottom: 0;\n}\n.image {\n  height: 38px;\n  transform: scale(0.75);\n}\n</style>\n","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[0]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./verify-field.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[0]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./verify-field.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./verify-field.vue?vue&type=template&id=1cb84be0&scoped=true&\"\nimport script from \"./verify-field.vue?vue&type=script&lang=js&\"\nexport * from \"./verify-field.vue?vue&type=script&lang=js&\"\nimport style0 from \"./verify-field.vue?vue&type=style&index=0&id=1cb84be0&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1cb84be0\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"page page-add_payment\">\n    <div id=\"reader-2\"></div>\n    <div class=\"title title_line\">请选择收款方式</div>\n    <van-radio-group v-model=\"payment\">\n      <van-cell-group>\n        <van-cell clickable title=\"银行卡\" @click=\"payment = 1\">\n          <template #icon>\n            <div class=\"payment-icon bank\"></div>\n          </template>\n          <template #right-icon>\n            <van-radio :name=\"1\" />\n          </template>\n        </van-cell>\n        <!--  @click=\"payment = 2\" -->\n        <van-cell v-if=\"!hideAlipayWechat\" clickable title=\"支付宝\" @click=\"payment = 2\">\n          <template #icon>\n            <div class=\"payment-icon ali\"></div>\n          </template>\n          <template #right-icon>\n            <van-radio :name=\"2\" />\n          </template>\n        </van-cell>\n        <!-- @click=\"payment = 4\" -->\n        <van-cell v-if=\"!hideAlipayWechat\" clickable title=\"微信\" @click=\"payment = 4\">\n          <template #icon>\n            <div class=\"payment-icon wechat\"></div>\n          </template>\n          <template #right-icon>\n            <van-radio :name=\"4\" />\n          </template>\n        </van-cell>\n        <!--  @click=\"payment = 8\" -->\n        <van-cell clickable title=\"USDT\" @click=\"payment = 8\">\n          <template #icon>\n            <div class=\"payment-icon usdt\"></div>\n          </template>\n          <template #right-icon>\n            <van-radio :name=\"8\" />\n          </template>\n        </van-cell>\n      </van-cell-group>\n    </van-radio-group>\n    <template v-if=\"payment === 1\">\n      <div class=\"title secondary title_line\">填写银行卡信息</div>\n      <van-form @submit=\"onSubmit\">\n        <van-field\n          :value=\"bankFormData.bankName\"\n          autocomplete=\"new-password\"\n          clickable\n          input-align=\"right\"\n          label=\"银行名称\"\n          name=\"bank\"\n          placeholder=\"请选择开户行\"\n          readonly\n          right-icon=\"arrow\"\n          @click=\"showBankPicker = true\"\n        />\n        <van-field\n          :value=\"bankFormData.bankAddress\"\n          autocomplete=\"new-password\"\n          clickable\n          input-align=\"right\"\n          label=\"开户所在地\"\n          name=\"bankAddress\"\n          placeholder=\"请选择\"\n          readonly\n          right-icon=\"arrow\"\n          @click=\"showBankAddressPicker = true\"\n        />\n        <van-field\n          v-model=\"bankFormData.bankBranch\"\n          autocomplete=\"new-password\"\n          input-align=\"right\"\n          label=\"开户支行\"\n          name=\"bankBranch\"\n          placeholder=\"选填\"\n        />\n        <van-field\n          v-if=\"isMerchant\"\n          v-model=\"bankFormData.realName\"\n          autocomplete=\"new-password\"\n          label=\"姓名\"\n          name=\"name\"\n          :readonly=\"!isMerchant\"\n        />\n        <van-field\n          v-else\n          :value=\"$root.userInfo.realName\"\n          autocomplete=\"new-password\"\n          label=\"姓名\"\n          name=\"name\"\n          readonly\n        />\n        <van-field\n          v-model=\"bankFormData.bankNo\"\n          autocomplete=\"new-password\"\n          label=\"卡号\"\n          name=\"bankNo\"\n          placeholder=\"储蓄卡\"\n          type=\"digit\"\n        />\n        <van-field\n          v-model=\"bankFormData.securePassword\"\n          autocomplete=\"new-password\"\n          label=\"资金密码\"\n          maxlength=\"6\"\n          name=\"securePassword\"\n          placeholder=\"6位纯数字资金密码\"\n          :type=\"$root.dynamicPasswordInputType\"\n        />\n        <verify-field\n          v-model=\"bankFormData.code\"\n          @uniqid=\"(v) => (bankFormData.verifyUniqid = v)\"\n        />\n        <van-button class=\"block primary\" native-type=\"submit\"> 确定添加 </van-button>\n      </van-form>\n    </template>\n\n    <template v-if=\"payment === 2\">\n      <div class=\"title secondary title_line\">填写支付宝信息</div>\n      <van-form @submit=\"onSubmit\">\n        <van-field v-model=\"aliFormData.alipayAccount\" label=\"支付宝账号\" name=\"alipayAccount\" />\n        <van-field\n          v-if=\"isMerchant\"\n          v-model=\"aliFormData.realName\"\n          autocomplete=\"new-password\"\n          label=\"真实姓名\"\n          name=\"name\"\n          :readonly=\"!isMerchant\"\n        />\n        <van-field\n          v-else\n          :value=\"$root.userInfo.realName\"\n          autocomplete=\"new-password\"\n          label=\"真实姓名\"\n          name=\"name\"\n          readonly\n        />\n        <van-field\n          :value=\"aliFormData.address\"\n          autocomplete=\"new-password\"\n          clickable\n          input-align=\"right\"\n          label=\"所在地区\"\n          name=\"address\"\n          readonly\n          right-icon=\"arrow\"\n          @click=\"showBankAddressPicker = true\"\n        />\n        <div class=\"uploadWrapper\">\n          <van-uploader\n            v-model=\"aliFormData.receiptCode\"\n            :after-read=\"(file) => afterRead(file, 'ali')\"\n            :max-count=\"1\"\n            image-fit=\"contain\"\n            preview-full-image\n            result-type=\"file\"\n            @click.native=\"(e) => onClickUpload('ali', e)\"\n          >\n            <van-button class=\"upload\">\n              <van-icon name=\"plus\" />\n              <div class=\"text\">请上传收款码</div>\n            </van-button>\n          </van-uploader>\n        </div>\n        <van-field\n          v-model=\"aliFormData.securePassword\"\n          autocomplete=\"new-password\"\n          label=\"资金密码\"\n          maxlength=\"6\"\n          name=\"securePassword\"\n          placeholder=\"6位纯数字资金密码\"\n          :type=\"$root.dynamicPasswordInputType\"\n        />\n        <verify-field v-model=\"aliFormData.code\" @uniqid=\"(v) => (aliFormData.verifyUniqid = v)\" />\n        <van-button\n          :disabled=\"submitLoading\"\n          :loading=\"submitLoading\"\n          class=\"block primary\"\n          native-type=\"submit\"\n        >\n          确定添加\n        </van-button>\n      </van-form>\n      <div class=\"example\" @click=\"$router.push('/how_to_save_receive_code')\">如何保存收款码？</div>\n    </template>\n\n    <template v-if=\"payment === 4\">\n      <div class=\"title secondary title_line\">填写微信信息</div>\n      <van-form @submit=\"onSubmit\">\n        <van-field\n          v-model=\"wechatFormData.wxRealname\"\n          label=\"姓名\"\n          name=\"wxRealname\"\n          placeholder=\"微信实名姓名\"\n        />\n        <van-field\n          v-if=\"isMerchant\"\n          v-model=\"wechatFormData.realName\"\n          autocomplete=\"new-password\"\n          label=\"真实姓名\"\n          name=\"name\"\n          :readonly=\"!isMerchant\"\n        />\n        <van-field\n          v-else\n          :value=\"$root.userInfo.realName\"\n          autocomplete=\"new-password\"\n          label=\"真实姓名\"\n          name=\"name\"\n          readonly\n        />\n        <van-field\n          :value=\"wechatFormData.address\"\n          autocomplete=\"new-password\"\n          clickable\n          input-align=\"right\"\n          label=\"所在地区\"\n          name=\"address\"\n          readonly\n          right-icon=\"arrow\"\n          @click=\"showBankAddressPicker = true\"\n        />\n        <div class=\"uploadWrapper\">\n          <van-uploader\n            v-model=\"wechatFormData.receiptCode\"\n            :after-read=\"(file) => afterRead(file, 'wechat')\"\n            :class=\"{ disableFile: $root.isH5Plus }\"\n            :max-count=\"1\"\n            image-fit=\"contain\"\n            preview-full-image\n            result-type=\"file\"\n            @click.native=\"(e) => onClickUpload('wechat', e)\"\n          >\n            <van-button class=\"upload\">\n              <van-icon name=\"plus\" />\n              <div class=\"text\">请上传收款码</div>\n            </van-button>\n          </van-uploader>\n        </div>\n        <van-field\n          v-model=\"wechatFormData.securePassword\"\n          autocomplete=\"new-password\"\n          label=\"资金密码\"\n          maxlength=\"6\"\n          name=\"securePassword\"\n          placeholder=\"6位纯数字资金密码\"\n          :type=\"$root.dynamicPasswordInputType\"\n        />\n        <verify-field\n          v-model=\"wechatFormData.code\"\n          @uniqid=\"(v) => (wechatFormData.verifyUniqid = v)\"\n        />\n        <van-button class=\"block primary\" native-type=\"submit\"> 确定添加 </van-button>\n      </van-form>\n      <div class=\"example\" @click=\"$router.push('/how_to_save_receive_code/1')\">\n        如何保存收款码？\n      </div>\n    </template>\n\n    <template v-if=\"payment === 8\">\n      <div class=\"title secondary title_line\">填写USDT收款信息</div>\n      <van-form @submit=\"onSubmit\">\n        <van-field\n          :value=\"usdtFormData.address\"\n          autocomplete=\"new-password\"\n          clickable\n          input-align=\"right\"\n          label=\"所在地区\"\n          name=\"address\"\n          readonly\n          right-icon=\"arrow\"\n          @click=\"showBankAddressPicker = true\"\n        />\n        <van-field\n          v-model=\"usdtFormData.usdtAddress\"\n          label=\"收款地址\"\n          name=\"usdtAddress\"\n          placeholder=\"USDT收款地址(TRC20)\"\n        />\n        <van-field\n          v-model=\"usdtFormData.securePassword\"\n          autocomplete=\"new-password\"\n          label=\"资金密码\"\n          maxlength=\"6\"\n          name=\"securePassword\"\n          placeholder=\"6位纯数字资金密码\"\n          :type=\"$root.dynamicPasswordInputType\"\n        />\n        <verify-field\n          v-model=\"usdtFormData.code\"\n          @uniqid=\"(v) => (usdtFormData.verifyUniqid = v)\"\n        />\n        <van-button class=\"block primary\" native-type=\"submit\"> 确定添加 </van-button>\n      </van-form>\n    </template>\n\n    <van-popup\n      v-model=\"showBankPicker\"\n      position=\"bottom\"\n      safe-area-inset-bottom\n      @close=\"bankName = ''\"\n    >\n      <van-field v-model=\"bankName\" placeholder=\"输入关键字搜索银行\"></van-field>\n      <van-picker\n        :columns=\"filteredBanks\"\n        show-toolbar\n        value-key=\"bankName\"\n        @cancel=\"showBankPicker = false\"\n        @confirm=\"onConfirmPickBank\"\n      />\n    </van-popup>\n    <van-popup v-model=\"showBankAddressPicker\" position=\"bottom\" safe-area-inset-bottom>\n      <van-area :area-list=\"areaList\" :columns-num=\"2\" title=\"标题\" @confirm=\"onConfirmAddress\" />\n    </van-popup>\n  </div>\n</template>\n\n<script>\nimport { addPayment } from \"@/apis/user\";\nimport { upload } from \"@/apis/common\";\nimport { Html5Qrcode } from \"html5-qrcode\";\nimport QrScanner from \"qr-scanner\";\nimport { loadAreaList } from \"@/vendor/lazyLoads\";\nimport { verifyGoogleAuth } from \"@/vendor/globalVerify\";\nimport VerifyField from \"./components/verify-field.vue\";\nimport { cryptoPaymentsMixins } from \"@/vendor/mixins\";\n\nexport default {\n  mixins: [cryptoPaymentsMixins],\n  components: { VerifyField },\n  data() {\n    return {\n      payment: 1, // 1 bank 2 ali 4 wechat\n      showBankPicker: false,\n      showBankAddressPicker: false,\n      areaList: {},\n      submitLoading: false,\n      bankName: \"\",\n      bankFormData: {\n        bankId: \"\",\n        bankName: \"\",\n        bankAddress: \"\",\n        provinceId: \"\",\n        cityId: \"\",\n        bankBranch: \"\",\n        bankNo: \"\",\n        securePassword: \"\",\n        verifyUniqid: \"\",\n        code: \"\",\n        realName: \"\",\n      },\n      wechatFormData: {\n        wxRealname: \"\",\n        realName: \"\",\n        securePassword: \"\",\n        address: \"\",\n        provinceId: \"\",\n        cityId: \"\",\n        receiptCode: [],\n        qrContent: \"\",\n        verifyUniqid: \"\",\n        code: \"\",\n      },\n      aliFormData: {\n        alipayAccount: \"\",\n        realName: \"\",\n        securePassword: \"\",\n        address: \"\",\n        provinceId: \"\",\n        cityId: \"\",\n        receiptCode: [],\n        qrContent: \"\",\n        verifyUniqid: \"\",\n        code: \"\",\n      },\n      usdtFormData: {\n        address: \"\",\n        provinceId: \"\",\n        cityId: \"\",\n        usdtAddress: \"\",\n        securePassword: \"\",\n        verifyUniqid: \"\",\n        code: \"\",\n      },\n    };\n  },\n  watch: {\n    payment(newVal) {\n      if (newVal != 1) {\n        this.bankFormData = {\n          bankId: \"\",\n          bankName: \"\",\n          bankAddress: \"\",\n          provinceId: \"\",\n          cityId: \"\",\n          bankBranch: \"\",\n          bankNo: \"\",\n          securePassword: \"\",\n          verifyUniqid: \"\",\n          code: \"\",\n        };\n      }\n      if (newVal != 2) {\n        this.aliFormData = {\n          alipayAccount: \"\",\n          // realName: \"\",\n          securePassword: \"\",\n          address: \"\",\n          provinceId: \"\",\n          cityId: \"\",\n          receiptCode: [],\n          verifyUniqid: \"\",\n          code: \"\",\n        };\n      }\n      if (newVal != 4) {\n        this.wechatFormData = {\n          wxRealname: \"\",\n          // realName: \"\",\n          securePassword: \"\",\n          address: \"\",\n          provinceId: \"\",\n          cityId: \"\",\n          receiptCode: [],\n          verifyUniqid: \"\",\n          code: \"\",\n        };\n      }\n      if (newVal != 8) {\n        this.usdtFormData = {\n          address: \"\",\n          provinceId: \"\",\n          cityId: \"\",\n          usdtAddress: \"\",\n          securePassword: \"\",\n          verifyUniqid: \"\",\n          code: \"\",\n        };\n      }\n    },\n  },\n  computed: {\n    filteredBanks() {\n      if (this.bankName) {\n        const reg = new RegExp(`(${this.bankName})+`, \"g\");\n        return this.$root.banks.filter((item) => {\n          if (reg.test(item.bankName)) return item;\n        });\n      }\n      return this.$root.banks;\n    },\n  },\n  async created() {\n    this.areaList = (await loadAreaList()).areaList || {};\n    this.$root.loadPayments();\n    this.$root.$emit(\"root:set-topbar\", [\"left-back\"]);\n    this.payment = Number(this.$route.params.index || 1);\n  },\n  methods: {\n    // 银行\n    onConfirmPickBank({ bankId, bankName } = {}) {\n      this.showBankPicker = false;\n      if (!bankId) return;\n      this.bankFormData.bankId = bankId;\n      this.bankFormData.bankName = bankName;\n    },\n    onConfirmAddress(items) {\n      const [province, city] = items;\n      if (this.payment == 1) {\n        this.bankFormData.provinceId = province.code;\n        this.bankFormData.cityId = city.code;\n        this.bankFormData.bankAddress = province.name + \"  \" + city.name;\n      }\n\n      if (this.payment == 2) {\n        this.aliFormData.provinceId = province.code;\n        this.aliFormData.cityId = city.code;\n        this.aliFormData.address = province.name + \"  \" + city.name;\n      }\n\n      if (this.payment == 4) {\n        this.wechatFormData.provinceId = province.code;\n        this.wechatFormData.cityId = city.code;\n        this.wechatFormData.address = province.name + \"  \" + city.name;\n      }\n\n      if (this.payment == 8) {\n        this.usdtFormData.provinceId = province.code;\n        this.usdtFormData.cityId = city.code;\n        this.usdtFormData.address = province.name + \"  \" + city.name;\n      }\n\n      this.showBankAddressPicker = false;\n    },\n    afterRead(file, payment) {\n      const formKey =\n        payment === \"wechat\" ? \"wechatFormData\" : payment === \"ali\" ? \"aliFormData\" : \"\";\n\n      const startUpload = () => {\n        file.status = \"uploading\";\n        file.message = \"上传中...\";\n        upload({\n          _file: file.file,\n          imgFile: this.$root.isH5Plus ? file._filePath : file.file,\n          type: \"other\",\n        }).then(({ ok, data, msg }) => {\n          if (ok) {\n            file.status = \"done\";\n            const imageUrl = data.name;\n            const url = this.$root.getImageUrl(data.name);\n            console.log(\"上传支付收款码成功：\", url);\n            this[formKey].receiptCode = [{ url, imageUrl }];\n          } else {\n            file.status = \"error\";\n            file.message = \"上传失败\";\n            this.$toast.fail(msg);\n          }\n        });\n      };\n\n      const scanner = new Html5Qrcode(/* element id */ \"reader-2\");\n      scanner\n        .scanFile(file.file, true)\n        .then((decoded) => {\n          this[formKey].qrContent = decoded;\n          startUpload();\n        })\n        .catch((err) => {\n          QrScanner.scanImage(file.file)\n            .then((result) => {\n              this[formKey].qrContent = result;\n              startUpload();\n            })\n            .catch((e) => {\n              const _err = e || err;\n              this[formKey].qrContent = \"\";\n              this.$toast.fail(`无法识别收款码:${_err}`);\n            });\n        });\n    },\n    async onSubmit() {\n      const isPassed = await verifyGoogleAuth(this);\n      if (isPassed) this.submit();\n    },\n    submit() {\n      const form = {\n        type: this.payment,\n      };\n      if (this.payment === 1) {\n        if (!this.bankFormData.bankId) return this.$toast.fail(\"请选择银行\");\n        if (!this.bankFormData.bankAddress) return this.$toast.fail(\"请选择开户所在地\");\n        // if (!this.bankFormData.bankBranch)\n        //   return this.$toast.fail(\"请输入开户支行\");\n        if (this.isMerchant && !this.bankFormData.realName) return this.$toast.fail(\"请输入真实用姓名\")\n        if (!this.bankFormData.bankNo) return this.$toast.fail(\"请输入银行卡号\");\n        if (this.bankFormData.bankNo.length < 10 || this.bankFormData.bankNo.length > 20)\n          return this.$toast.fail(\"银行卡号为10-20位数字\");\n        if (!/^\\d{6}$/.test(this.bankFormData.securePassword))\n          return this.$toast.fail(\"请输入6数字组成的资金密码\");\n        if (\n          this.$root.payments.bank.list.findIndex(\n            (item) => item.bankNo === this.bankFormData.bankNo\n          ) > -1\n        ) {\n          return this.$toast.fail(\"该银行卡号已绑定\");\n        }\n        Object.assign(form, {\n          bankNo: this.bankFormData.bankNo,\n          bankId: this.bankFormData.bankId,\n          bankBranch: this.bankFormData.bankBranch,\n          provinceId: this.bankFormData.provinceId,\n          cityId: this.bankFormData.cityId,\n          securePassword: this.bankFormData.securePassword,\n          verifyUniqid: this.bankFormData.verifyUniqid,\n          code: this.bankFormData.code,\n          realName: this.bankFormData.realName\n        });\n      }\n\n      if (this.payment === 2) {\n        if (!this.aliFormData.alipayAccount) return this.$toast.fail(\"请输入支付宝账号\");\n        if (this.isMerchant && !this.aliFormData.realName)\n          return this.$toast.fail(\"请输入真实姓名\");\n        if (!this.aliFormData.address) return this.$toast.fail(\"请输入所在地区\");\n        if (this.aliFormData.qrContent === \"\") return this.$toast.fail(\"请上传收款码\");\n        if (!/^\\d{6}$/.test(this.aliFormData.securePassword))\n          return this.$toast.fail(\"请输入6数字组成的资金密码\");\n\n        Object.assign(form, {\n          alipayAccount: this.aliFormData.alipayAccount,\n          qrContent: this.aliFormData.qrContent,\n          provinceId: this.aliFormData.provinceId,\n          cityId: this.aliFormData.cityId,\n          receiptCode: this.aliFormData.receiptCode[0].imageUrl,\n          securePassword: this.aliFormData.securePassword,\n          verifyUniqid: this.aliFormData.verifyUniqid,\n          code: this.aliFormData.code,\n          realName: this.aliFormData.realName\n        });\n      }\n\n      if (this.payment === 4) {\n        if (!this.wechatFormData.wxRealname) return this.$toast.fail(\"请输入微信姓名\");\n        if (this.isMerchant && !this.wechatFormData.realName)\n          return this.$toast.fail(\"请输入真实姓名\");\n        if (!this.wechatFormData.address) return this.$toast.fail(\"请输入所在地区\");\n        if (this.wechatFormData.qrContent === \"\") return this.$toast.fail(\"请上传收款码\");\n        if (!/^\\d{6}$/.test(this.wechatFormData.securePassword))\n          return this.$toast.fail(\"请输入6数字组成的资金密码\");\n\n        Object.assign(form, {\n          wxRealname: this.wechatFormData.wxRealname,\n          qrContent: this.wechatFormData.qrContent,\n          provinceId: this.wechatFormData.provinceId,\n          cityId: this.wechatFormData.cityId,\n          receiptCode: this.wechatFormData.receiptCode[0].imageUrl,\n          securePassword: this.wechatFormData.securePassword,\n          verifyUniqid: this.wechatFormData.verifyUniqid,\n          code: this.wechatFormData.code,\n          realName: this.wechatFormData.realName\n        });\n      }\n\n      if (this.payment === 8) {\n        // 验证收款地址是否填写\n        if (!this.usdtFormData.usdtAddress) return this.$toast.fail(\"请输入USDT收款地址\");\n        // 验证资金密码\n        if (!/^\\d{6}$/.test(this.usdtFormData.securePassword))\n          return this.$toast.fail(\"请输入6数字组成的资金密码\");\n        // 验证地址\n        if (!this.usdtFormData.provinceId || !this.usdtFormData.cityId)\n          return this.$toast.fail(\"请选择所在地区\");\n        // 合并数据\n        Object.assign(form, {\n          provinceId: this.usdtFormData.provinceId,\n          cityId: this.usdtFormData.cityId,\n          usdtAddress: this.usdtFormData.usdtAddress,\n          securePassword: this.usdtFormData.securePassword,\n          verifyUniqid: this.usdtFormData.verifyUniqid,\n          code: this.usdtFormData.code,\n        });\n      }\n\n      this.submitLoading = true;\n      if (this.isMerchant) form.isBusiness = true\n      addPayment(form).then(({ ok, data, msg, code }) => {\n        this.submitLoading = false;\n        if (ok) {\n          if (this.payment == 2) {\n            this.$dialog.alert({\n              title: \"提交成功\",\n              message:\n                \"绑定支付宝账号需后台审核通过后才可以正常使用。审核部门会尽快处理，请耐心等待，感谢你的支持！\",\n              confirmButtonText: \"我知道了\",\n            });\n          } else {\n            this.$toast.success(msg);\n          }\n          this.resetForm();\n          this.$root.loadPayments();\n        } else {\n          if (code !== 1002) {\n            this.aliFormData.qrContent = \"\";\n            this.aliFormData.receiptCode = [];\n            this.wechatFormData.qrContent = \"\";\n            this.wechatFormData.receiptCode = [];\n          }\n          this.bankFormData.code = \"\";\n          this.aliFormData.code = \"\";\n          this.wechatFormData.code = \"\";\n          this.usdtFormData.code = \"\";\n          this.$toast.fail(msg);\n        }\n      });\n    },\n    resetForm() {\n      this.bankFormData = {\n        bankId: \"\",\n        bankName: \"\",\n        bankAddress: \"\",\n        provinceId: \"\",\n        cityId: \"\",\n        bankBranch: \"\",\n        bankNo: \"\",\n        securePassword: \"\",\n        realName: \"\",\n      };\n      this.aliFormData = {\n        alipayAccount: \"\",\n        // realName: \"\",\n        securePassword: \"\",\n        address: \"\",\n        provinceId: \"\",\n        cityId: \"\",\n        receiptCode: [],\n        qrContent: \"\",\n      };\n      this.wechatFormData = {\n        // wxRealname: \"\",\n        // realName: \"\",\n        securePassword: \"\",\n        address: \"\",\n        provinceId: \"\",\n        cityId: \"\",\n        receiptCode: [],\n        qrContent: \"\",\n      };\n      this.usdtFormData = {\n        address: \"\",\n        provinceId: \"\",\n        cityId: \"\",\n        usdtAddress: \"\",\n        securePassword: \"\",\n      };\n    },\n    onClickUpload(key, e) {\n      // e.preventDefault();\n      // const formKey = key === \"wechat\" ? \"wechatFormData\" : key === \"ali\" ? \"aliFormData\" : \"\";\n      // // https://ez-demo-static.ubn-ele.com/Upload/Image/other/2023/08/27/e9b38461f6764487d08eb72495191e60.png\n      // this[formKey].receiptCode = [\n      //   {\n      //     url: \"https://ez-demo-static.ubn-ele.com/Upload/Image/other/2023/08/27/e9b38461f6764487d08eb72495191e60.png\",\n      //   },\n      // ];\n      const _this = this;\n      if (this.$root.isH5Plus) {\n        e.preventDefault();\n        window.h5p.uploadImage(async (blob, name, type, path) => {\n          if (blob) {\n            const formKey =\n              key === \"wechat\" ? \"wechatFormData\" : key === \"ali\" ? \"aliFormData\" : \"\";\n            if (formKey) {\n              var fs = new File([blob], name, {\n                type: type,\n              });\n              _this[formKey].receiptCode = [{ file: fs, _filePath: path }];\n              _this.afterRead(_this[formKey].receiptCode[0], key);\n            }\n          } else {\n            this.$toast.fail(\"获取图片失败\");\n          }\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.page.page-add_payment {\n  overflow-y: auto;\n\n  #reader-2 {\n    position: absolute !important;\n    z-index: -10;\n    opacity: 0;\n  }\n\n  .title {\n    font-size: 12px;\n    height: 24px;\n    line-height: 24px;\n    background-color: #f0f0f0ff;\n\n    &.secondary {\n      background-color: #fff;\n    }\n  }\n\n  .payment-icon {\n    margin-right: 12px;\n\n    &.bank {\n      width: 35px;\n      height: 23px;\n    }\n\n    &.wechat {\n      width: 35px;\n      height: 35px;\n    }\n\n    &.ali {\n      width: 35px;\n      height: 35px;\n    }\n\n    &.usdt {\n      width: 35px;\n      height: 35px;\n    }\n  }\n\n  .uploadWrapper {\n    padding: 12px 16px 0;\n\n    .van-uploader__preview {\n      margin: 0 0 0 0;\n      width: 343px;\n      height: 148px;\n\n      .van-uploader__preview-image {\n        width: 343px;\n        height: 148px;\n      }\n    }\n  }\n\n  .disableFile {\n    .van-uploader__input {\n      pointer-events: none;\n      display: none;\n    }\n  }\n\n  .example {\n    font-size: 14px;\n    color: #0698f4;\n    text-align: center;\n    padding: 10px 0 5px;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[0]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=5b08dce1&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import {q} from '@/vendor/q';\n// import * as wangsu from 'wcs-js-sdk'\n// import CryptoJS from 'crypto-js'\n\nexport const getImageCode = data => q({\n  url: '/Api/Common/VerifyCode/getImageCode',\n  method: 'POST',\n  data\n})\n\nexport const checkVerifyCode = data => q({\n  url: '/Api/Common/VerifyCode/checkVerifyCodeNew',\n  method: 'POST',\n  data\n})\n\nexport const sendCode = data => q({\n  url: '/Api/Common/VerifyCode/sendCode',\n  method: 'POST',\n  data\n})\n\nexport const uploadBase64Img = data => q({\n  url: '/Api/User/UploadFile/uploadBase64Img',\n  method: 'POST',\n  data\n})\n\nexport const uploadVideo = data => q({\n  url: '/Api/User/UploadFile/uploadVideo',\n  method: 'POST',\n  data,\n})\n\nexport const uploadLargeVideo = (data, opts = {}) => q({\n  url: '/Api/User/UploadFile/uploadLargeVideo',\n  method: 'POST',\n  data,\n  opts\n})\n\nexport const uploadFileToken = data => q({\n  url: '/Api/User/UploadFile/uploadFileToken',\n  method: 'POST',\n  data,\n})\n\n// export const uploadFromWangSu = async (file, type, mediaType) => {\n//   const {ok, data, msg} = await uploadFileToken({\n//     type,\n//     mediaType\n//   })\n//   if (!ok) throw new Error(`msg:${msg},can not get sdk token`)\n//   const _uploader = wangsu.wcsUpload(file, data.token, data.uploadUrl, {\n//     timeout: 25000,\n//     retryCount: 4,\n//   })\n//   // 获取文件etag\n//   // wangsu.getEtagHash(file,res => {\n//   //   console.log(res);\n//   // })\n//   return await new Promise((resolve, reject) => {\n//     _uploader.onError = error => {\n//       console.error('wangsu upload error', error);\n//       reject({\n//         ok:false,\n//         msg: `code:${error.code},isRequestError:${error.isRequestError} message:${error.message}`\n//       })\n//     }\n//     _uploader.onComplete = res => {\n//       resolve({\n//         ok: true,\n//         msg: \"上传成功\",\n//         data: {\n//           name: data.imageUrl\n//         }\n//       })\n//     }\n//     _uploader.putFile()\n//   })\n// }\n","import {checkGoogleAuthenticator} from \"@/apis/user\";\n\nexport const verifySecuretedCode = vm => {\n  vm.$toast('请输入资金密码')\n  return new Promise((resolve, reject) => {\n    vm.$root.showPassowordKeyboard = true\n    vm.$root.$once('root:global-password', async code => resolve(code))\n  })\n}\n\nexport const verifyGoogleAuth = (vm) => {\n  if (vm.$root.userInfo && vm.$root.userInfo.isGoogleAuthenticator) {\n    vm.$toast('请输入Google安全码')\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        vm.$root.showPassowordKeyboard = true\n        vm.$root.$once('root:global-password', async code => {\n          if (!code || code === 'close-by-route-change') return resolve(false)\n          const {ok, msg} = await checkGoogleAuthenticator({safeCode: code})\n          if (ok) {\n            resolve(true)\n          } else {\n            resolve(false)\n            vm.$toast.fail(msg)\n          }\n        })\n      }, 0)\n    })\n  } else {\n    return Promise.resolve(true)\n  }\n\n}\n","import { businessGetAccountInfo, getDepositDetail } from \"@/apis/crypto\";\nimport QRCode from \"qrcode\";\n\nexport const cryptoMixins = {\n  data() {\n    return {\n      cryptoAccountInfo: {\n        address: \"\",\n        otcTicker: \"\",\n      },\n    };\n  },\n  methods: {\n    // 查询币种信息\n    async businessGetAccountInfo(val) {\n      const { ok, data, msg, ...rest } = await businessGetAccountInfo({ type: val });\n      if (ok) {\n        this.cryptoAccountInfo = data;\n        this.updateQRcode();\n      } else {\n        this.$toast(msg);\n      }\n\n      return { ok, data, msg, ...rest };\n    },\n    // 更新二维码\n    updateQRcode(str) {\n      QRCode.toDataURL(str || this.cryptoAccountInfo.address).then((url) => {\n        const $QRcode = document.querySelector(\".QRcode\");\n        $QRcode && $QRcode.setAttribute(\"src\", url);\n      });\n    },\n  },\n};\n\nexport const cryptoMerchantMixins = {\n  computed: {\n    isCryptoMerchant() {\n      return this.$route.query.m === \"1\";\n    },\n    amICryptoMerchant() {\n      return this.$root.userInfo.BusinessStatus === 1;\n    },\n    ApiPath() {\n      return this.isCryptoMerchant ? \"Business\" : \"\";\n    },\n    BuyerApiPath() {\n      // 一个商家单，普通用户买调用普通的，商家买调用商家的\n      // 一个普通单，都调用普通的\n      // 一个商家单，商家卖调用商家的，普通用户没有商家卖单\n      return this.isCryptoMerchant && this.amICryptoMerchant ? \"Business\" : \"\";\n    },\n  },\n};\n\nexport const cryptoTradingMixins = {\n  data() {\n    return {\n      countdown: 0,\n      orderType: \"TronDeposit\",\n      form: {\n        paymentType: \"\",\n        amount: \"\",\n      },\n      orderInfo: {\n        userId: null,\n        paymentType: \"\",\n        amount: \"\",\n        passageType: \"\",\n        receivingAddress: \"\",\n        copeAmount: 0,\n        createDate: \"\",\n        status: \"\",\n        createTime: \"\",\n        updateTime: \"\",\n        orderId: 0,\n        orderNo: \"\",\n      },\n    };\n  },\n  computed: {\n    isTrading() {\n      return !!this.orderInfo.orderId;\n    },\n  },\n  created() {\n    this.getDepositDetail(this.isBuyVb); //isBuyVb 区分区块链交易 取值amount\n  },\n  methods: {\n    // 检查存续订单\n    async getDepositDetail(isBuyVb = false) {\n      //是否购买V币  true amount为amount  否则 copeAmount\n      const { ok, data, msg } = await getDepositDetail({ orderType: this.orderType });\n      if (ok) {\n        if (data) {\n          // 有未完成的订单\n          this.$set(this, \"orderInfo\", data.order);\n          this.form.amount = isBuyVb ? data.order.amount : data.order.copeAmount;\n          this.form.paymentType = data.order.paymentType;\n          this.cryptoAccountInfo.address = data.order.receivingAddress;\n          this.cryptoAccountInfo.otcTicker = parseFloat(\n            String(data.order.amount / data.order.copeAmount)\n          ).toFixed(2);\n          this.updateQRcode();\n          // 订单超时\n          if (data.currentStateExpireTime) {\n            if (data.currentStateExpireTime.expire) {\n              this.countdown =\n                data.currentStateExpireTime.expire * 1000 - this.$root.getServerTime();\n              if (this.countdown > 0) {\n                const timer = setTimeout(() => this.getDepositDetail(isBuyVb), 5000);\n                this.$once(\"hook:beforeDestroy\", () => clearTimeout(timer));\n              }\n            } else {\n              this.countdown = 0;\n            }\n          }\n        } else {\n          // 没有未完成的订单\n        }\n      } else {\n        this.$toast(msg);\n      }\n    },\n  },\n};\n\nexport const cryptoPaymentsMixins = {\n  computed: {\n    isMerchant() {\n      return this.$route.query.m === \"1\" || this.$route.params.type === \"merchant\";\n    },\n    hideAlipayWechat() {\n      return this.isMerchant && !this.$root.isMerchantAlipayWechatOpen;\n    },\n    hideAlipayWechatAtMerchantPage() {\n      return !this.$root.isMerchantAlipayWechatOpen;\n    },\n    payments() {\n      return this.isMerchant ? this.$root.merchantPayments : this.$root.payments;\n    },\n  },\n};\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","model","value","callback","$$v","payment","expression","on","$event","scopedSlots","_u","key","fn","proxy","hideAlipayWechat","_e","onSubmit","bankFormData","bankName","showBankPicker","bankAddress","showBankAddressPicker","$set","isMerchant","$root","userInfo","realName","dynamicPasswordInputType","v","verifyUniqid","aliFormData","address","file","afterRead","nativeOn","e","onClickUpload","apply","arguments","submitLoading","$router","push","wechatFormData","class","disableFile","isH5Plus","usdtFormData","filteredBanks","onConfirmPickBank","areaList","onConfirmAddress","staticRenderFns","a","constructor","onDecode","DEFAULT_CANVAS_SIZE","$video","$canvas","createElement","c","_onDecode","canvasSizeOrCalculateScanRegion","console","_legacyOnDecode","b","canvasSizeOrOnDecodeErrorOrOptions","_onDecodeError","options","onDecodeError","_calculateScanRegion","calculateScanRegion","_preferredCamera","preferredCamera","_legacyCanvasSize","_maxScansPerSecond","maxScansPerSecond","_onPlay","bind","_onLoadedMetaData","_onVisibilityChange","_updateOverlay","video","disablePictureInPicture","playsInline","muted","shouldHideVideo","hidden","document","body","contains","appendChild","highlightScanRegion","highlightCodeOutline","d","$overlay","overlay","f","overlayStyle","position","display","pointerEvents","classList","add","gotExternalOverlay","innerHTML","firstElementChild","animate","transform","duration","iterations","Infinity","direction","easing","videoContainer","insertBefore","nextSibling","insertAdjacentHTML","$codeOutlineHighlight","lastElementChild","_scanRegion","requestAnimationFrame","videoStyle","style","setProperty","visibility","warn","opacity","width","height","_this","parentElement","removeChild","addEventListener","window","_qrEnginePromise","QrScanner","createQrEngine","_createClass","hasFlash","srcObject","_context","MediaStream","stream","_getCameraStream","getVideoTracks","getSettings","_stopVideoStream","isFlashOn","_flashOn","toggleFlash","_context2","turnFlashOff","turnFlashOn","_destroyed","_active","_paused","_context3","applyConstraints","advanced","torch","_context4","_restartVideoStream","destroy","removeEventListener","stop","_postWorkerMessage","start","_context5","Error","location","protocol","play","facingMode","_yield$this$_getCamer","_setVideoMirror","catch","pause","stopStreamImmediately","_context6","_this2","stopStream","Promise","resolve","setTimeout","setCamera","facingModeOrDeviceId","_context7","scanImage","setGrayscaleWeights","red","green","blue","useIntegerApproximation","setInversionMode","inversionMode","_scanFrame","x","Math","round","videoWidth","scanRegionSize","y","videoHeight","downScaledWidth","downScaledHeight","_this3","h","m","n","p","k","q","videoObjectFit","videoScaledWidth","elementWidth","videoScaledHeight","elementHeight","videoAspectRatio","elementAspectRatio","min","videoY","map","length","i","lengthValue","parseFloat","endsWith","regionWidth","regionHeight","top","elementY","regionY","left","elementX","isVideoMirrored","videoX","regionX","_convertPoints","paused","ended","requestVideoFrameCallback","readyState","_context8","timeSinceLastScan","minimumTimeBetweenScans","_this4","_lastScanTimestamp","Date","now","scanRegion","qrEngine","canvas","result","_disableBarcodeDetector","Worker","data","clearTimeout","_codeOutlineHighlightRemovalTimeout","undefined","setAttribute","cornerPoints","join","error","NO_QR_CODE_FOUND","log","navigator","mediaDevices","_context9","constraint","preferenceType","exact","_this5","_i","constraints","audio","_context10","wasPaused","_getFacingMode","videoStream","test","videoTrack","label","_drawToCanvas","workerPath","hasCamera","listCameras","_context11","requestLabels","_context13","_context12","filter","device","enumerateCameras","every","camera","getUserMedia","openedStream","id","deviceId","imageOrFileOrBlobOrUrl","scanRegionOrOptions","_yield$Promise$all","_yield$Promise$all2","_e$_drawToCanvas","_e$_drawToCanvas2","g","_k","_args15","disallowCanvasResizing","alsoTryWithoutScanRegion","returnDetailedScanResult","_context15","all","_loadImage","image","canvasContext","detailedScanResult","gotExternalEngine","_postWorkerMessageSync","qrEngineWorker","reject","timeout","onMessage","onError","expectedResponseId","event","imageData","buffer","race","_asyncToGenerator","_context14","_yield$c$detect","_yield$c$detect2","scanResult","rawValue","message","errorMessage","_context16","BarcodeDetector","getSupportedFormats","includes","formats","import_308","then","createWorker","points","_step","point","scaleFactorX","offsetX","scaleFactorY","offsetY","_iterator","_step2","track","removeTrack","_iterator2","scanRegionWidth","scanRegionHeight","canvasWidth","canvasHeight","alpha","context","imageSmoothingEnabled","drawImage","scanRegionX","scanRegionY","Image","_context17","_awaitImageLoad","HTMLVideoElement","HTMLCanvasElement","SVGImageElement","OffscreenCanvas","ImageBitmap","File","Blob","URL","src","createObjectURL","toString","revokeObjectURL","_context18","complete","naturalWidth","listener","ErrorEvent","qrEngineOrQrEnginePromise","type","transfer","_context19","postMessage","_g","_b","$attrs","$listeners","flush","slot","watch","created","methods","getImageCode","codeType","code","component","mixins","components","VerifyField","bankId","provinceId","cityId","bankBranch","bankNo","securePassword","wxRealname","receiptCode","qrContent","alipayAccount","usdtAddress","computed","loadAreaList","province","city","upload","_file","imgFile","msg","url","imageUrl","scanner","scanFile","startUpload","verifyGoogleAuth","isPassed","submit","Object","addPayment","title","confirmButtonText","resetForm","formKey","fs","_filePath","_this6","method","sendCode","uploadLargeVideo","opts","verifySecuretedCode","vm","$toast","showPassowordKeyboard","$once","_ref","regeneratorRuntime","mark","_callee","wrap","prev","next","abrupt","_x","isGoogleAuthenticator","_ref2","_callee2","_yield$checkGoogleAut","ok","checkGoogleAuthenticator","safeCode","sent","fail","_x2","cryptoMixins","cryptoAccountInfo","otcTicker","businessGetAccountInfo","val","_yield$_businessGetAc","rest","_objectWithoutProperties","_excluded","updateQRcode","_objectSpread","str","QRCode","$QRcode","querySelector","cryptoMerchantMixins","isCryptoMerchant","$route","query","amICryptoMerchant","BusinessStatus","ApiPath","BuyerApiPath","cryptoTradingMixins","countdown","orderType","form","paymentType","amount","orderInfo","userId","passageType","receivingAddress","copeAmount","createDate","status","createTime","updateTime","orderId","orderNo","isTrading","getDepositDetail","isBuyVb","_arguments","_yield$_getDepositDet","timer","order","String","toFixed","currentStateExpireTime","expire","getServerTime","cryptoPaymentsMixins","params","isMerchantAlipayWechatOpen","hideAlipayWechatAtMerchantPage","payments","merchantPayments"],"sourceRoot":""}